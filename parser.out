Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> funcs
Rule 2     funcs -> funcs func
Rule 3     funcs -> func
Rule 4     func -> FUNC NAME LPAREN formal_args RPAREN LBRACE statements RBRACE
Rule 5     func -> FUNC NAME LPAREN RPAREN LBRACE statements RBRACE
Rule 6     lambda -> LAMBDA LPAREN formal_args RPAREN LBRACE statements RBRACE
Rule 7     lambda -> LAMBDA LPAREN RPAREN LBRACE statements RBRACE
Rule 8     formal_args -> formal_args COMMA formal_arg
Rule 9     formal_args -> formal_arg
Rule 10    formal_arg -> NAME
Rule 11    formal_arg -> REF NAME
Rule 12    statements -> statements statement
Rule 13    statements -> statement
Rule 14    statement -> variable ASSIGN expression SEMI
Rule 15    variable -> NAME DOT NAME
Rule 16    variable -> NAME
Rule 17    statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE
Rule 18    statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
Rule 19    statement -> WHILE LPAREN expression RPAREN LBRACE statements RBRACE
Rule 20    statement -> expression SEMI
Rule 21    statement -> RETURN expression SEMI
Rule 22    statement -> RETURN SEMI
Rule 23    expression -> NOT expression
Rule 24    expression -> MINUS expression
Rule 25    expression -> expression EQ expression
Rule 26    expression -> expression GREATER expression
Rule 27    expression -> expression LESS expression
Rule 28    expression -> expression NOT_EQ expression
Rule 29    expression -> expression GREATER_EQ expression
Rule 30    expression -> expression LESS_EQ expression
Rule 31    expression -> expression PLUS expression
Rule 32    expression -> expression MINUS expression
Rule 33    expression -> expression MULTIPLY expression
Rule 34    expression -> expression DIVIDE expression
Rule 35    expression -> LPAREN expression RPAREN
Rule 36    expression -> expression OR expression
Rule 37    expression -> expression AND expression
Rule 38    expression -> NUMBER
Rule 39    expression -> lambda
Rule 40    expression -> TRUE
Rule 41    expression -> FALSE
Rule 42    expression -> NIL
Rule 43    expression -> AT
Rule 44    expression -> STRING
Rule 45    expression -> variable
Rule 46    expression -> NAME LPAREN args RPAREN
Rule 47    expression -> NAME LPAREN RPAREN
Rule 48    expression -> NAME DOT NAME LPAREN args RPAREN
Rule 49    expression -> NAME DOT NAME LPAREN RPAREN
Rule 50    args -> args COMMA expression
Rule 51    args -> expression

Terminals, with rules where they appear

AND                  : 37
ASSIGN               : 14
AT                   : 43
COMMA                : 8 50
DIVIDE               : 34
DOT                  : 15 48 49
ELSE                 : 18
EQ                   : 25
FALSE                : 41
FUNC                 : 4 5
GREATER              : 26
GREATER_EQ           : 29
IF                   : 17 18
LAMBDA               : 6 7
LBRACE               : 4 5 6 7 17 18 18 19
LESS                 : 27
LESS_EQ              : 30
LPAREN               : 4 5 6 7 17 18 19 35 46 47 48 49
MINUS                : 24 32
MULTIPLY             : 33
NAME                 : 4 5 10 11 15 15 16 46 47 48 48 49 49
NIL                  : 42
NOT                  : 23
NOT_EQ               : 28
NUMBER               : 38
OR                   : 36
PLUS                 : 31
RBRACE               : 4 5 6 7 17 18 18 19
REF                  : 11
RETURN               : 21 22
RPAREN               : 4 5 6 7 17 18 19 35 46 47 48 49
SEMI                 : 14 20 21 22
STRING               : 44
TRUE                 : 40
WHILE                : 19
error                : 

Nonterminals, with rules where they appear

args                 : 46 48 50
expression           : 14 17 18 19 20 21 23 24 25 25 26 26 27 27 28 28 29 29 30 30 31 31 32 32 33 33 34 34 35 36 36 37 37 50 51
formal_arg           : 8 9
formal_args          : 4 6 8
func                 : 2 3
funcs                : 1 2
lambda               : 39
program              : 0
statement            : 12 13
statements           : 4 5 6 7 12 17 18 18 19
variable             : 14 45

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . funcs
    (2) funcs -> . funcs func
    (3) funcs -> . func
    (4) func -> . FUNC NAME LPAREN formal_args RPAREN LBRACE statements RBRACE
    (5) func -> . FUNC NAME LPAREN RPAREN LBRACE statements RBRACE

    FUNC            shift and go to state 4

    program                        shift and go to state 1
    funcs                          shift and go to state 2
    func                           shift and go to state 3

state 1

    (0) S' -> program .



state 2

    (1) program -> funcs .
    (2) funcs -> funcs . func
    (4) func -> . FUNC NAME LPAREN formal_args RPAREN LBRACE statements RBRACE
    (5) func -> . FUNC NAME LPAREN RPAREN LBRACE statements RBRACE

    $end            reduce using rule 1 (program -> funcs .)
    FUNC            shift and go to state 4

    func                           shift and go to state 5

state 3

    (3) funcs -> func .

    FUNC            reduce using rule 3 (funcs -> func .)
    $end            reduce using rule 3 (funcs -> func .)


state 4

    (4) func -> FUNC . NAME LPAREN formal_args RPAREN LBRACE statements RBRACE
    (5) func -> FUNC . NAME LPAREN RPAREN LBRACE statements RBRACE

    NAME            shift and go to state 6


state 5

    (2) funcs -> funcs func .

    FUNC            reduce using rule 2 (funcs -> funcs func .)
    $end            reduce using rule 2 (funcs -> funcs func .)


state 6

    (4) func -> FUNC NAME . LPAREN formal_args RPAREN LBRACE statements RBRACE
    (5) func -> FUNC NAME . LPAREN RPAREN LBRACE statements RBRACE

    LPAREN          shift and go to state 7


state 7

    (4) func -> FUNC NAME LPAREN . formal_args RPAREN LBRACE statements RBRACE
    (5) func -> FUNC NAME LPAREN . RPAREN LBRACE statements RBRACE
    (8) formal_args -> . formal_args COMMA formal_arg
    (9) formal_args -> . formal_arg
    (10) formal_arg -> . NAME
    (11) formal_arg -> . REF NAME

    RPAREN          shift and go to state 10
    NAME            shift and go to state 8
    REF             shift and go to state 12

    formal_args                    shift and go to state 9
    formal_arg                     shift and go to state 11

state 8

    (10) formal_arg -> NAME .

    RPAREN          reduce using rule 10 (formal_arg -> NAME .)
    COMMA           reduce using rule 10 (formal_arg -> NAME .)


state 9

    (4) func -> FUNC NAME LPAREN formal_args . RPAREN LBRACE statements RBRACE
    (8) formal_args -> formal_args . COMMA formal_arg

    RPAREN          shift and go to state 13
    COMMA           shift and go to state 14


state 10

    (5) func -> FUNC NAME LPAREN RPAREN . LBRACE statements RBRACE

    LBRACE          shift and go to state 15


state 11

    (9) formal_args -> formal_arg .

    RPAREN          reduce using rule 9 (formal_args -> formal_arg .)
    COMMA           reduce using rule 9 (formal_args -> formal_arg .)


state 12

    (11) formal_arg -> REF . NAME

    NAME            shift and go to state 16


state 13

    (4) func -> FUNC NAME LPAREN formal_args RPAREN . LBRACE statements RBRACE

    LBRACE          shift and go to state 17


state 14

    (8) formal_args -> formal_args COMMA . formal_arg
    (10) formal_arg -> . NAME
    (11) formal_arg -> . REF NAME

    NAME            shift and go to state 8
    REF             shift and go to state 12

    formal_arg                     shift and go to state 18

state 15

    (5) func -> FUNC NAME LPAREN RPAREN LBRACE . statements RBRACE
    (12) statements -> . statements statement
    (13) statements -> . statement
    (14) statement -> . variable ASSIGN expression SEMI
    (17) statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE
    (18) statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (19) statement -> . WHILE LPAREN expression RPAREN LBRACE statements RBRACE
    (20) statement -> . expression SEMI
    (21) statement -> . RETURN expression SEMI
    (22) statement -> . RETURN SEMI
    (15) variable -> . NAME DOT NAME
    (16) variable -> . NAME
    (23) expression -> . NOT expression
    (24) expression -> . MINUS expression
    (25) expression -> . expression EQ expression
    (26) expression -> . expression GREATER expression
    (27) expression -> . expression LESS expression
    (28) expression -> . expression NOT_EQ expression
    (29) expression -> . expression GREATER_EQ expression
    (30) expression -> . expression LESS_EQ expression
    (31) expression -> . expression PLUS expression
    (32) expression -> . expression MINUS expression
    (33) expression -> . expression MULTIPLY expression
    (34) expression -> . expression DIVIDE expression
    (35) expression -> . LPAREN expression RPAREN
    (36) expression -> . expression OR expression
    (37) expression -> . expression AND expression
    (38) expression -> . NUMBER
    (39) expression -> . lambda
    (40) expression -> . TRUE
    (41) expression -> . FALSE
    (42) expression -> . NIL
    (43) expression -> . AT
    (44) expression -> . STRING
    (45) expression -> . variable
    (46) expression -> . NAME LPAREN args RPAREN
    (47) expression -> . NAME LPAREN RPAREN
    (48) expression -> . NAME DOT NAME LPAREN args RPAREN
    (49) expression -> . NAME DOT NAME LPAREN RPAREN
    (6) lambda -> . LAMBDA LPAREN formal_args RPAREN LBRACE statements RBRACE
    (7) lambda -> . LAMBDA LPAREN RPAREN LBRACE statements RBRACE

    IF              shift and go to state 25
    WHILE           shift and go to state 26
    RETURN          shift and go to state 27
    NAME            shift and go to state 19
    NOT             shift and go to state 28
    MINUS           shift and go to state 29
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 30
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    NIL             shift and go to state 34
    AT              shift and go to state 35
    STRING          shift and go to state 36
    LAMBDA          shift and go to state 37

    statements                     shift and go to state 21
    statement                      shift and go to state 22
    variable                       shift and go to state 23
    expression                     shift and go to state 24
    lambda                         shift and go to state 31

state 16

    (11) formal_arg -> REF NAME .

    RPAREN          reduce using rule 11 (formal_arg -> REF NAME .)
    COMMA           reduce using rule 11 (formal_arg -> REF NAME .)


state 17

    (4) func -> FUNC NAME LPAREN formal_args RPAREN LBRACE . statements RBRACE
    (12) statements -> . statements statement
    (13) statements -> . statement
    (14) statement -> . variable ASSIGN expression SEMI
    (17) statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE
    (18) statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (19) statement -> . WHILE LPAREN expression RPAREN LBRACE statements RBRACE
    (20) statement -> . expression SEMI
    (21) statement -> . RETURN expression SEMI
    (22) statement -> . RETURN SEMI
    (15) variable -> . NAME DOT NAME
    (16) variable -> . NAME
    (23) expression -> . NOT expression
    (24) expression -> . MINUS expression
    (25) expression -> . expression EQ expression
    (26) expression -> . expression GREATER expression
    (27) expression -> . expression LESS expression
    (28) expression -> . expression NOT_EQ expression
    (29) expression -> . expression GREATER_EQ expression
    (30) expression -> . expression LESS_EQ expression
    (31) expression -> . expression PLUS expression
    (32) expression -> . expression MINUS expression
    (33) expression -> . expression MULTIPLY expression
    (34) expression -> . expression DIVIDE expression
    (35) expression -> . LPAREN expression RPAREN
    (36) expression -> . expression OR expression
    (37) expression -> . expression AND expression
    (38) expression -> . NUMBER
    (39) expression -> . lambda
    (40) expression -> . TRUE
    (41) expression -> . FALSE
    (42) expression -> . NIL
    (43) expression -> . AT
    (44) expression -> . STRING
    (45) expression -> . variable
    (46) expression -> . NAME LPAREN args RPAREN
    (47) expression -> . NAME LPAREN RPAREN
    (48) expression -> . NAME DOT NAME LPAREN args RPAREN
    (49) expression -> . NAME DOT NAME LPAREN RPAREN
    (6) lambda -> . LAMBDA LPAREN formal_args RPAREN LBRACE statements RBRACE
    (7) lambda -> . LAMBDA LPAREN RPAREN LBRACE statements RBRACE

    IF              shift and go to state 25
    WHILE           shift and go to state 26
    RETURN          shift and go to state 27
    NAME            shift and go to state 19
    NOT             shift and go to state 28
    MINUS           shift and go to state 29
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 30
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    NIL             shift and go to state 34
    AT              shift and go to state 35
    STRING          shift and go to state 36
    LAMBDA          shift and go to state 37

    statements                     shift and go to state 38
    statement                      shift and go to state 22
    variable                       shift and go to state 23
    expression                     shift and go to state 24
    lambda                         shift and go to state 31

state 18

    (8) formal_args -> formal_args COMMA formal_arg .

    RPAREN          reduce using rule 8 (formal_args -> formal_args COMMA formal_arg .)
    COMMA           reduce using rule 8 (formal_args -> formal_args COMMA formal_arg .)


state 19

    (15) variable -> NAME . DOT NAME
    (16) variable -> NAME .
    (46) expression -> NAME . LPAREN args RPAREN
    (47) expression -> NAME . LPAREN RPAREN
    (48) expression -> NAME . DOT NAME LPAREN args RPAREN
    (49) expression -> NAME . DOT NAME LPAREN RPAREN

    DOT             shift and go to state 39
    ASSIGN          reduce using rule 16 (variable -> NAME .)
    SEMI            reduce using rule 16 (variable -> NAME .)
    EQ              reduce using rule 16 (variable -> NAME .)
    GREATER         reduce using rule 16 (variable -> NAME .)
    LESS            reduce using rule 16 (variable -> NAME .)
    NOT_EQ          reduce using rule 16 (variable -> NAME .)
    GREATER_EQ      reduce using rule 16 (variable -> NAME .)
    LESS_EQ         reduce using rule 16 (variable -> NAME .)
    PLUS            reduce using rule 16 (variable -> NAME .)
    MINUS           reduce using rule 16 (variable -> NAME .)
    MULTIPLY        reduce using rule 16 (variable -> NAME .)
    DIVIDE          reduce using rule 16 (variable -> NAME .)
    OR              reduce using rule 16 (variable -> NAME .)
    AND             reduce using rule 16 (variable -> NAME .)
    LPAREN          shift and go to state 40


state 20

    (35) expression -> LPAREN . expression RPAREN
    (23) expression -> . NOT expression
    (24) expression -> . MINUS expression
    (25) expression -> . expression EQ expression
    (26) expression -> . expression GREATER expression
    (27) expression -> . expression LESS expression
    (28) expression -> . expression NOT_EQ expression
    (29) expression -> . expression GREATER_EQ expression
    (30) expression -> . expression LESS_EQ expression
    (31) expression -> . expression PLUS expression
    (32) expression -> . expression MINUS expression
    (33) expression -> . expression MULTIPLY expression
    (34) expression -> . expression DIVIDE expression
    (35) expression -> . LPAREN expression RPAREN
    (36) expression -> . expression OR expression
    (37) expression -> . expression AND expression
    (38) expression -> . NUMBER
    (39) expression -> . lambda
    (40) expression -> . TRUE
    (41) expression -> . FALSE
    (42) expression -> . NIL
    (43) expression -> . AT
    (44) expression -> . STRING
    (45) expression -> . variable
    (46) expression -> . NAME LPAREN args RPAREN
    (47) expression -> . NAME LPAREN RPAREN
    (48) expression -> . NAME DOT NAME LPAREN args RPAREN
    (49) expression -> . NAME DOT NAME LPAREN RPAREN
    (6) lambda -> . LAMBDA LPAREN formal_args RPAREN LBRACE statements RBRACE
    (7) lambda -> . LAMBDA LPAREN RPAREN LBRACE statements RBRACE
    (15) variable -> . NAME DOT NAME
    (16) variable -> . NAME

    NOT             shift and go to state 28
    MINUS           shift and go to state 29
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 30
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    NIL             shift and go to state 34
    AT              shift and go to state 35
    STRING          shift and go to state 36
    NAME            shift and go to state 43
    LAMBDA          shift and go to state 37

    expression                     shift and go to state 41
    lambda                         shift and go to state 31
    variable                       shift and go to state 42

state 21

    (5) func -> FUNC NAME LPAREN RPAREN LBRACE statements . RBRACE
    (12) statements -> statements . statement
    (14) statement -> . variable ASSIGN expression SEMI
    (17) statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE
    (18) statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (19) statement -> . WHILE LPAREN expression RPAREN LBRACE statements RBRACE
    (20) statement -> . expression SEMI
    (21) statement -> . RETURN expression SEMI
    (22) statement -> . RETURN SEMI
    (15) variable -> . NAME DOT NAME
    (16) variable -> . NAME
    (23) expression -> . NOT expression
    (24) expression -> . MINUS expression
    (25) expression -> . expression EQ expression
    (26) expression -> . expression GREATER expression
    (27) expression -> . expression LESS expression
    (28) expression -> . expression NOT_EQ expression
    (29) expression -> . expression GREATER_EQ expression
    (30) expression -> . expression LESS_EQ expression
    (31) expression -> . expression PLUS expression
    (32) expression -> . expression MINUS expression
    (33) expression -> . expression MULTIPLY expression
    (34) expression -> . expression DIVIDE expression
    (35) expression -> . LPAREN expression RPAREN
    (36) expression -> . expression OR expression
    (37) expression -> . expression AND expression
    (38) expression -> . NUMBER
    (39) expression -> . lambda
    (40) expression -> . TRUE
    (41) expression -> . FALSE
    (42) expression -> . NIL
    (43) expression -> . AT
    (44) expression -> . STRING
    (45) expression -> . variable
    (46) expression -> . NAME LPAREN args RPAREN
    (47) expression -> . NAME LPAREN RPAREN
    (48) expression -> . NAME DOT NAME LPAREN args RPAREN
    (49) expression -> . NAME DOT NAME LPAREN RPAREN
    (6) lambda -> . LAMBDA LPAREN formal_args RPAREN LBRACE statements RBRACE
    (7) lambda -> . LAMBDA LPAREN RPAREN LBRACE statements RBRACE

    RBRACE          shift and go to state 44
    IF              shift and go to state 25
    WHILE           shift and go to state 26
    RETURN          shift and go to state 27
    NAME            shift and go to state 19
    NOT             shift and go to state 28
    MINUS           shift and go to state 29
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 30
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    NIL             shift and go to state 34
    AT              shift and go to state 35
    STRING          shift and go to state 36
    LAMBDA          shift and go to state 37

    statement                      shift and go to state 45
    variable                       shift and go to state 23
    expression                     shift and go to state 24
    lambda                         shift and go to state 31

state 22

    (13) statements -> statement .

    RBRACE          reduce using rule 13 (statements -> statement .)
    IF              reduce using rule 13 (statements -> statement .)
    WHILE           reduce using rule 13 (statements -> statement .)
    RETURN          reduce using rule 13 (statements -> statement .)
    NAME            reduce using rule 13 (statements -> statement .)
    NOT             reduce using rule 13 (statements -> statement .)
    MINUS           reduce using rule 13 (statements -> statement .)
    LPAREN          reduce using rule 13 (statements -> statement .)
    NUMBER          reduce using rule 13 (statements -> statement .)
    TRUE            reduce using rule 13 (statements -> statement .)
    FALSE           reduce using rule 13 (statements -> statement .)
    NIL             reduce using rule 13 (statements -> statement .)
    AT              reduce using rule 13 (statements -> statement .)
    STRING          reduce using rule 13 (statements -> statement .)
    LAMBDA          reduce using rule 13 (statements -> statement .)


state 23

    (14) statement -> variable . ASSIGN expression SEMI
    (45) expression -> variable .

    ASSIGN          shift and go to state 46
    SEMI            reduce using rule 45 (expression -> variable .)
    EQ              reduce using rule 45 (expression -> variable .)
    GREATER         reduce using rule 45 (expression -> variable .)
    LESS            reduce using rule 45 (expression -> variable .)
    NOT_EQ          reduce using rule 45 (expression -> variable .)
    GREATER_EQ      reduce using rule 45 (expression -> variable .)
    LESS_EQ         reduce using rule 45 (expression -> variable .)
    PLUS            reduce using rule 45 (expression -> variable .)
    MINUS           reduce using rule 45 (expression -> variable .)
    MULTIPLY        reduce using rule 45 (expression -> variable .)
    DIVIDE          reduce using rule 45 (expression -> variable .)
    OR              reduce using rule 45 (expression -> variable .)
    AND             reduce using rule 45 (expression -> variable .)


state 24

    (20) statement -> expression . SEMI
    (25) expression -> expression . EQ expression
    (26) expression -> expression . GREATER expression
    (27) expression -> expression . LESS expression
    (28) expression -> expression . NOT_EQ expression
    (29) expression -> expression . GREATER_EQ expression
    (30) expression -> expression . LESS_EQ expression
    (31) expression -> expression . PLUS expression
    (32) expression -> expression . MINUS expression
    (33) expression -> expression . MULTIPLY expression
    (34) expression -> expression . DIVIDE expression
    (36) expression -> expression . OR expression
    (37) expression -> expression . AND expression

    SEMI            shift and go to state 47
    EQ              shift and go to state 48
    GREATER         shift and go to state 49
    LESS            shift and go to state 50
    NOT_EQ          shift and go to state 51
    GREATER_EQ      shift and go to state 52
    LESS_EQ         shift and go to state 53
    PLUS            shift and go to state 54
    MINUS           shift and go to state 55
    MULTIPLY        shift and go to state 56
    DIVIDE          shift and go to state 57
    OR              shift and go to state 58
    AND             shift and go to state 59


state 25

    (17) statement -> IF . LPAREN expression RPAREN LBRACE statements RBRACE
    (18) statement -> IF . LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE

    LPAREN          shift and go to state 60


state 26

    (19) statement -> WHILE . LPAREN expression RPAREN LBRACE statements RBRACE

    LPAREN          shift and go to state 61


state 27

    (21) statement -> RETURN . expression SEMI
    (22) statement -> RETURN . SEMI
    (23) expression -> . NOT expression
    (24) expression -> . MINUS expression
    (25) expression -> . expression EQ expression
    (26) expression -> . expression GREATER expression
    (27) expression -> . expression LESS expression
    (28) expression -> . expression NOT_EQ expression
    (29) expression -> . expression GREATER_EQ expression
    (30) expression -> . expression LESS_EQ expression
    (31) expression -> . expression PLUS expression
    (32) expression -> . expression MINUS expression
    (33) expression -> . expression MULTIPLY expression
    (34) expression -> . expression DIVIDE expression
    (35) expression -> . LPAREN expression RPAREN
    (36) expression -> . expression OR expression
    (37) expression -> . expression AND expression
    (38) expression -> . NUMBER
    (39) expression -> . lambda
    (40) expression -> . TRUE
    (41) expression -> . FALSE
    (42) expression -> . NIL
    (43) expression -> . AT
    (44) expression -> . STRING
    (45) expression -> . variable
    (46) expression -> . NAME LPAREN args RPAREN
    (47) expression -> . NAME LPAREN RPAREN
    (48) expression -> . NAME DOT NAME LPAREN args RPAREN
    (49) expression -> . NAME DOT NAME LPAREN RPAREN
    (6) lambda -> . LAMBDA LPAREN formal_args RPAREN LBRACE statements RBRACE
    (7) lambda -> . LAMBDA LPAREN RPAREN LBRACE statements RBRACE
    (15) variable -> . NAME DOT NAME
    (16) variable -> . NAME

    SEMI            shift and go to state 63
    NOT             shift and go to state 28
    MINUS           shift and go to state 29
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 30
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    NIL             shift and go to state 34
    AT              shift and go to state 35
    STRING          shift and go to state 36
    NAME            shift and go to state 43
    LAMBDA          shift and go to state 37

    expression                     shift and go to state 62
    lambda                         shift and go to state 31
    variable                       shift and go to state 42

state 28

    (23) expression -> NOT . expression
    (23) expression -> . NOT expression
    (24) expression -> . MINUS expression
    (25) expression -> . expression EQ expression
    (26) expression -> . expression GREATER expression
    (27) expression -> . expression LESS expression
    (28) expression -> . expression NOT_EQ expression
    (29) expression -> . expression GREATER_EQ expression
    (30) expression -> . expression LESS_EQ expression
    (31) expression -> . expression PLUS expression
    (32) expression -> . expression MINUS expression
    (33) expression -> . expression MULTIPLY expression
    (34) expression -> . expression DIVIDE expression
    (35) expression -> . LPAREN expression RPAREN
    (36) expression -> . expression OR expression
    (37) expression -> . expression AND expression
    (38) expression -> . NUMBER
    (39) expression -> . lambda
    (40) expression -> . TRUE
    (41) expression -> . FALSE
    (42) expression -> . NIL
    (43) expression -> . AT
    (44) expression -> . STRING
    (45) expression -> . variable
    (46) expression -> . NAME LPAREN args RPAREN
    (47) expression -> . NAME LPAREN RPAREN
    (48) expression -> . NAME DOT NAME LPAREN args RPAREN
    (49) expression -> . NAME DOT NAME LPAREN RPAREN
    (6) lambda -> . LAMBDA LPAREN formal_args RPAREN LBRACE statements RBRACE
    (7) lambda -> . LAMBDA LPAREN RPAREN LBRACE statements RBRACE
    (15) variable -> . NAME DOT NAME
    (16) variable -> . NAME

    NOT             shift and go to state 28
    MINUS           shift and go to state 29
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 30
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    NIL             shift and go to state 34
    AT              shift and go to state 35
    STRING          shift and go to state 36
    NAME            shift and go to state 43
    LAMBDA          shift and go to state 37

    expression                     shift and go to state 64
    lambda                         shift and go to state 31
    variable                       shift and go to state 42

state 29

    (24) expression -> MINUS . expression
    (23) expression -> . NOT expression
    (24) expression -> . MINUS expression
    (25) expression -> . expression EQ expression
    (26) expression -> . expression GREATER expression
    (27) expression -> . expression LESS expression
    (28) expression -> . expression NOT_EQ expression
    (29) expression -> . expression GREATER_EQ expression
    (30) expression -> . expression LESS_EQ expression
    (31) expression -> . expression PLUS expression
    (32) expression -> . expression MINUS expression
    (33) expression -> . expression MULTIPLY expression
    (34) expression -> . expression DIVIDE expression
    (35) expression -> . LPAREN expression RPAREN
    (36) expression -> . expression OR expression
    (37) expression -> . expression AND expression
    (38) expression -> . NUMBER
    (39) expression -> . lambda
    (40) expression -> . TRUE
    (41) expression -> . FALSE
    (42) expression -> . NIL
    (43) expression -> . AT
    (44) expression -> . STRING
    (45) expression -> . variable
    (46) expression -> . NAME LPAREN args RPAREN
    (47) expression -> . NAME LPAREN RPAREN
    (48) expression -> . NAME DOT NAME LPAREN args RPAREN
    (49) expression -> . NAME DOT NAME LPAREN RPAREN
    (6) lambda -> . LAMBDA LPAREN formal_args RPAREN LBRACE statements RBRACE
    (7) lambda -> . LAMBDA LPAREN RPAREN LBRACE statements RBRACE
    (15) variable -> . NAME DOT NAME
    (16) variable -> . NAME

    NOT             shift and go to state 28
    MINUS           shift and go to state 29
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 30
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    NIL             shift and go to state 34
    AT              shift and go to state 35
    STRING          shift and go to state 36
    NAME            shift and go to state 43
    LAMBDA          shift and go to state 37

    expression                     shift and go to state 65
    lambda                         shift and go to state 31
    variable                       shift and go to state 42

state 30

    (38) expression -> NUMBER .

    SEMI            reduce using rule 38 (expression -> NUMBER .)
    EQ              reduce using rule 38 (expression -> NUMBER .)
    GREATER         reduce using rule 38 (expression -> NUMBER .)
    LESS            reduce using rule 38 (expression -> NUMBER .)
    NOT_EQ          reduce using rule 38 (expression -> NUMBER .)
    GREATER_EQ      reduce using rule 38 (expression -> NUMBER .)
    LESS_EQ         reduce using rule 38 (expression -> NUMBER .)
    PLUS            reduce using rule 38 (expression -> NUMBER .)
    MINUS           reduce using rule 38 (expression -> NUMBER .)
    MULTIPLY        reduce using rule 38 (expression -> NUMBER .)
    DIVIDE          reduce using rule 38 (expression -> NUMBER .)
    OR              reduce using rule 38 (expression -> NUMBER .)
    AND             reduce using rule 38 (expression -> NUMBER .)
    RPAREN          reduce using rule 38 (expression -> NUMBER .)
    COMMA           reduce using rule 38 (expression -> NUMBER .)


state 31

    (39) expression -> lambda .

    SEMI            reduce using rule 39 (expression -> lambda .)
    EQ              reduce using rule 39 (expression -> lambda .)
    GREATER         reduce using rule 39 (expression -> lambda .)
    LESS            reduce using rule 39 (expression -> lambda .)
    NOT_EQ          reduce using rule 39 (expression -> lambda .)
    GREATER_EQ      reduce using rule 39 (expression -> lambda .)
    LESS_EQ         reduce using rule 39 (expression -> lambda .)
    PLUS            reduce using rule 39 (expression -> lambda .)
    MINUS           reduce using rule 39 (expression -> lambda .)
    MULTIPLY        reduce using rule 39 (expression -> lambda .)
    DIVIDE          reduce using rule 39 (expression -> lambda .)
    OR              reduce using rule 39 (expression -> lambda .)
    AND             reduce using rule 39 (expression -> lambda .)
    RPAREN          reduce using rule 39 (expression -> lambda .)
    COMMA           reduce using rule 39 (expression -> lambda .)


state 32

    (40) expression -> TRUE .

    SEMI            reduce using rule 40 (expression -> TRUE .)
    EQ              reduce using rule 40 (expression -> TRUE .)
    GREATER         reduce using rule 40 (expression -> TRUE .)
    LESS            reduce using rule 40 (expression -> TRUE .)
    NOT_EQ          reduce using rule 40 (expression -> TRUE .)
    GREATER_EQ      reduce using rule 40 (expression -> TRUE .)
    LESS_EQ         reduce using rule 40 (expression -> TRUE .)
    PLUS            reduce using rule 40 (expression -> TRUE .)
    MINUS           reduce using rule 40 (expression -> TRUE .)
    MULTIPLY        reduce using rule 40 (expression -> TRUE .)
    DIVIDE          reduce using rule 40 (expression -> TRUE .)
    OR              reduce using rule 40 (expression -> TRUE .)
    AND             reduce using rule 40 (expression -> TRUE .)
    RPAREN          reduce using rule 40 (expression -> TRUE .)
    COMMA           reduce using rule 40 (expression -> TRUE .)


state 33

    (41) expression -> FALSE .

    SEMI            reduce using rule 41 (expression -> FALSE .)
    EQ              reduce using rule 41 (expression -> FALSE .)
    GREATER         reduce using rule 41 (expression -> FALSE .)
    LESS            reduce using rule 41 (expression -> FALSE .)
    NOT_EQ          reduce using rule 41 (expression -> FALSE .)
    GREATER_EQ      reduce using rule 41 (expression -> FALSE .)
    LESS_EQ         reduce using rule 41 (expression -> FALSE .)
    PLUS            reduce using rule 41 (expression -> FALSE .)
    MINUS           reduce using rule 41 (expression -> FALSE .)
    MULTIPLY        reduce using rule 41 (expression -> FALSE .)
    DIVIDE          reduce using rule 41 (expression -> FALSE .)
    OR              reduce using rule 41 (expression -> FALSE .)
    AND             reduce using rule 41 (expression -> FALSE .)
    RPAREN          reduce using rule 41 (expression -> FALSE .)
    COMMA           reduce using rule 41 (expression -> FALSE .)


state 34

    (42) expression -> NIL .

    SEMI            reduce using rule 42 (expression -> NIL .)
    EQ              reduce using rule 42 (expression -> NIL .)
    GREATER         reduce using rule 42 (expression -> NIL .)
    LESS            reduce using rule 42 (expression -> NIL .)
    NOT_EQ          reduce using rule 42 (expression -> NIL .)
    GREATER_EQ      reduce using rule 42 (expression -> NIL .)
    LESS_EQ         reduce using rule 42 (expression -> NIL .)
    PLUS            reduce using rule 42 (expression -> NIL .)
    MINUS           reduce using rule 42 (expression -> NIL .)
    MULTIPLY        reduce using rule 42 (expression -> NIL .)
    DIVIDE          reduce using rule 42 (expression -> NIL .)
    OR              reduce using rule 42 (expression -> NIL .)
    AND             reduce using rule 42 (expression -> NIL .)
    RPAREN          reduce using rule 42 (expression -> NIL .)
    COMMA           reduce using rule 42 (expression -> NIL .)


state 35

    (43) expression -> AT .

    SEMI            reduce using rule 43 (expression -> AT .)
    EQ              reduce using rule 43 (expression -> AT .)
    GREATER         reduce using rule 43 (expression -> AT .)
    LESS            reduce using rule 43 (expression -> AT .)
    NOT_EQ          reduce using rule 43 (expression -> AT .)
    GREATER_EQ      reduce using rule 43 (expression -> AT .)
    LESS_EQ         reduce using rule 43 (expression -> AT .)
    PLUS            reduce using rule 43 (expression -> AT .)
    MINUS           reduce using rule 43 (expression -> AT .)
    MULTIPLY        reduce using rule 43 (expression -> AT .)
    DIVIDE          reduce using rule 43 (expression -> AT .)
    OR              reduce using rule 43 (expression -> AT .)
    AND             reduce using rule 43 (expression -> AT .)
    RPAREN          reduce using rule 43 (expression -> AT .)
    COMMA           reduce using rule 43 (expression -> AT .)


state 36

    (44) expression -> STRING .

    SEMI            reduce using rule 44 (expression -> STRING .)
    EQ              reduce using rule 44 (expression -> STRING .)
    GREATER         reduce using rule 44 (expression -> STRING .)
    LESS            reduce using rule 44 (expression -> STRING .)
    NOT_EQ          reduce using rule 44 (expression -> STRING .)
    GREATER_EQ      reduce using rule 44 (expression -> STRING .)
    LESS_EQ         reduce using rule 44 (expression -> STRING .)
    PLUS            reduce using rule 44 (expression -> STRING .)
    MINUS           reduce using rule 44 (expression -> STRING .)
    MULTIPLY        reduce using rule 44 (expression -> STRING .)
    DIVIDE          reduce using rule 44 (expression -> STRING .)
    OR              reduce using rule 44 (expression -> STRING .)
    AND             reduce using rule 44 (expression -> STRING .)
    RPAREN          reduce using rule 44 (expression -> STRING .)
    COMMA           reduce using rule 44 (expression -> STRING .)


state 37

    (6) lambda -> LAMBDA . LPAREN formal_args RPAREN LBRACE statements RBRACE
    (7) lambda -> LAMBDA . LPAREN RPAREN LBRACE statements RBRACE

    LPAREN          shift and go to state 66


state 38

    (4) func -> FUNC NAME LPAREN formal_args RPAREN LBRACE statements . RBRACE
    (12) statements -> statements . statement
    (14) statement -> . variable ASSIGN expression SEMI
    (17) statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE
    (18) statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (19) statement -> . WHILE LPAREN expression RPAREN LBRACE statements RBRACE
    (20) statement -> . expression SEMI
    (21) statement -> . RETURN expression SEMI
    (22) statement -> . RETURN SEMI
    (15) variable -> . NAME DOT NAME
    (16) variable -> . NAME
    (23) expression -> . NOT expression
    (24) expression -> . MINUS expression
    (25) expression -> . expression EQ expression
    (26) expression -> . expression GREATER expression
    (27) expression -> . expression LESS expression
    (28) expression -> . expression NOT_EQ expression
    (29) expression -> . expression GREATER_EQ expression
    (30) expression -> . expression LESS_EQ expression
    (31) expression -> . expression PLUS expression
    (32) expression -> . expression MINUS expression
    (33) expression -> . expression MULTIPLY expression
    (34) expression -> . expression DIVIDE expression
    (35) expression -> . LPAREN expression RPAREN
    (36) expression -> . expression OR expression
    (37) expression -> . expression AND expression
    (38) expression -> . NUMBER
    (39) expression -> . lambda
    (40) expression -> . TRUE
    (41) expression -> . FALSE
    (42) expression -> . NIL
    (43) expression -> . AT
    (44) expression -> . STRING
    (45) expression -> . variable
    (46) expression -> . NAME LPAREN args RPAREN
    (47) expression -> . NAME LPAREN RPAREN
    (48) expression -> . NAME DOT NAME LPAREN args RPAREN
    (49) expression -> . NAME DOT NAME LPAREN RPAREN
    (6) lambda -> . LAMBDA LPAREN formal_args RPAREN LBRACE statements RBRACE
    (7) lambda -> . LAMBDA LPAREN RPAREN LBRACE statements RBRACE

    RBRACE          shift and go to state 67
    IF              shift and go to state 25
    WHILE           shift and go to state 26
    RETURN          shift and go to state 27
    NAME            shift and go to state 19
    NOT             shift and go to state 28
    MINUS           shift and go to state 29
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 30
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    NIL             shift and go to state 34
    AT              shift and go to state 35
    STRING          shift and go to state 36
    LAMBDA          shift and go to state 37

    statement                      shift and go to state 45
    variable                       shift and go to state 23
    expression                     shift and go to state 24
    lambda                         shift and go to state 31

state 39

    (15) variable -> NAME DOT . NAME
    (48) expression -> NAME DOT . NAME LPAREN args RPAREN
    (49) expression -> NAME DOT . NAME LPAREN RPAREN

    NAME            shift and go to state 68


state 40

    (46) expression -> NAME LPAREN . args RPAREN
    (47) expression -> NAME LPAREN . RPAREN
    (50) args -> . args COMMA expression
    (51) args -> . expression
    (23) expression -> . NOT expression
    (24) expression -> . MINUS expression
    (25) expression -> . expression EQ expression
    (26) expression -> . expression GREATER expression
    (27) expression -> . expression LESS expression
    (28) expression -> . expression NOT_EQ expression
    (29) expression -> . expression GREATER_EQ expression
    (30) expression -> . expression LESS_EQ expression
    (31) expression -> . expression PLUS expression
    (32) expression -> . expression MINUS expression
    (33) expression -> . expression MULTIPLY expression
    (34) expression -> . expression DIVIDE expression
    (35) expression -> . LPAREN expression RPAREN
    (36) expression -> . expression OR expression
    (37) expression -> . expression AND expression
    (38) expression -> . NUMBER
    (39) expression -> . lambda
    (40) expression -> . TRUE
    (41) expression -> . FALSE
    (42) expression -> . NIL
    (43) expression -> . AT
    (44) expression -> . STRING
    (45) expression -> . variable
    (46) expression -> . NAME LPAREN args RPAREN
    (47) expression -> . NAME LPAREN RPAREN
    (48) expression -> . NAME DOT NAME LPAREN args RPAREN
    (49) expression -> . NAME DOT NAME LPAREN RPAREN
    (6) lambda -> . LAMBDA LPAREN formal_args RPAREN LBRACE statements RBRACE
    (7) lambda -> . LAMBDA LPAREN RPAREN LBRACE statements RBRACE
    (15) variable -> . NAME DOT NAME
    (16) variable -> . NAME

    RPAREN          shift and go to state 70
    NOT             shift and go to state 28
    MINUS           shift and go to state 29
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 30
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    NIL             shift and go to state 34
    AT              shift and go to state 35
    STRING          shift and go to state 36
    NAME            shift and go to state 43
    LAMBDA          shift and go to state 37

    args                           shift and go to state 69
    expression                     shift and go to state 71
    lambda                         shift and go to state 31
    variable                       shift and go to state 42

state 41

    (35) expression -> LPAREN expression . RPAREN
    (25) expression -> expression . EQ expression
    (26) expression -> expression . GREATER expression
    (27) expression -> expression . LESS expression
    (28) expression -> expression . NOT_EQ expression
    (29) expression -> expression . GREATER_EQ expression
    (30) expression -> expression . LESS_EQ expression
    (31) expression -> expression . PLUS expression
    (32) expression -> expression . MINUS expression
    (33) expression -> expression . MULTIPLY expression
    (34) expression -> expression . DIVIDE expression
    (36) expression -> expression . OR expression
    (37) expression -> expression . AND expression

    RPAREN          shift and go to state 72
    EQ              shift and go to state 48
    GREATER         shift and go to state 49
    LESS            shift and go to state 50
    NOT_EQ          shift and go to state 51
    GREATER_EQ      shift and go to state 52
    LESS_EQ         shift and go to state 53
    PLUS            shift and go to state 54
    MINUS           shift and go to state 55
    MULTIPLY        shift and go to state 56
    DIVIDE          shift and go to state 57
    OR              shift and go to state 58
    AND             shift and go to state 59


state 42

    (45) expression -> variable .

    RPAREN          reduce using rule 45 (expression -> variable .)
    EQ              reduce using rule 45 (expression -> variable .)
    GREATER         reduce using rule 45 (expression -> variable .)
    LESS            reduce using rule 45 (expression -> variable .)
    NOT_EQ          reduce using rule 45 (expression -> variable .)
    GREATER_EQ      reduce using rule 45 (expression -> variable .)
    LESS_EQ         reduce using rule 45 (expression -> variable .)
    PLUS            reduce using rule 45 (expression -> variable .)
    MINUS           reduce using rule 45 (expression -> variable .)
    MULTIPLY        reduce using rule 45 (expression -> variable .)
    DIVIDE          reduce using rule 45 (expression -> variable .)
    OR              reduce using rule 45 (expression -> variable .)
    AND             reduce using rule 45 (expression -> variable .)
    SEMI            reduce using rule 45 (expression -> variable .)
    COMMA           reduce using rule 45 (expression -> variable .)


state 43

    (46) expression -> NAME . LPAREN args RPAREN
    (47) expression -> NAME . LPAREN RPAREN
    (48) expression -> NAME . DOT NAME LPAREN args RPAREN
    (49) expression -> NAME . DOT NAME LPAREN RPAREN
    (15) variable -> NAME . DOT NAME
    (16) variable -> NAME .

    LPAREN          shift and go to state 40
    DOT             shift and go to state 73
    RPAREN          reduce using rule 16 (variable -> NAME .)
    EQ              reduce using rule 16 (variable -> NAME .)
    GREATER         reduce using rule 16 (variable -> NAME .)
    LESS            reduce using rule 16 (variable -> NAME .)
    NOT_EQ          reduce using rule 16 (variable -> NAME .)
    GREATER_EQ      reduce using rule 16 (variable -> NAME .)
    LESS_EQ         reduce using rule 16 (variable -> NAME .)
    PLUS            reduce using rule 16 (variable -> NAME .)
    MINUS           reduce using rule 16 (variable -> NAME .)
    MULTIPLY        reduce using rule 16 (variable -> NAME .)
    DIVIDE          reduce using rule 16 (variable -> NAME .)
    OR              reduce using rule 16 (variable -> NAME .)
    AND             reduce using rule 16 (variable -> NAME .)
    SEMI            reduce using rule 16 (variable -> NAME .)
    COMMA           reduce using rule 16 (variable -> NAME .)


state 44

    (5) func -> FUNC NAME LPAREN RPAREN LBRACE statements RBRACE .

    FUNC            reduce using rule 5 (func -> FUNC NAME LPAREN RPAREN LBRACE statements RBRACE .)
    $end            reduce using rule 5 (func -> FUNC NAME LPAREN RPAREN LBRACE statements RBRACE .)


state 45

    (12) statements -> statements statement .

    RBRACE          reduce using rule 12 (statements -> statements statement .)
    IF              reduce using rule 12 (statements -> statements statement .)
    WHILE           reduce using rule 12 (statements -> statements statement .)
    RETURN          reduce using rule 12 (statements -> statements statement .)
    NAME            reduce using rule 12 (statements -> statements statement .)
    NOT             reduce using rule 12 (statements -> statements statement .)
    MINUS           reduce using rule 12 (statements -> statements statement .)
    LPAREN          reduce using rule 12 (statements -> statements statement .)
    NUMBER          reduce using rule 12 (statements -> statements statement .)
    TRUE            reduce using rule 12 (statements -> statements statement .)
    FALSE           reduce using rule 12 (statements -> statements statement .)
    NIL             reduce using rule 12 (statements -> statements statement .)
    AT              reduce using rule 12 (statements -> statements statement .)
    STRING          reduce using rule 12 (statements -> statements statement .)
    LAMBDA          reduce using rule 12 (statements -> statements statement .)


state 46

    (14) statement -> variable ASSIGN . expression SEMI
    (23) expression -> . NOT expression
    (24) expression -> . MINUS expression
    (25) expression -> . expression EQ expression
    (26) expression -> . expression GREATER expression
    (27) expression -> . expression LESS expression
    (28) expression -> . expression NOT_EQ expression
    (29) expression -> . expression GREATER_EQ expression
    (30) expression -> . expression LESS_EQ expression
    (31) expression -> . expression PLUS expression
    (32) expression -> . expression MINUS expression
    (33) expression -> . expression MULTIPLY expression
    (34) expression -> . expression DIVIDE expression
    (35) expression -> . LPAREN expression RPAREN
    (36) expression -> . expression OR expression
    (37) expression -> . expression AND expression
    (38) expression -> . NUMBER
    (39) expression -> . lambda
    (40) expression -> . TRUE
    (41) expression -> . FALSE
    (42) expression -> . NIL
    (43) expression -> . AT
    (44) expression -> . STRING
    (45) expression -> . variable
    (46) expression -> . NAME LPAREN args RPAREN
    (47) expression -> . NAME LPAREN RPAREN
    (48) expression -> . NAME DOT NAME LPAREN args RPAREN
    (49) expression -> . NAME DOT NAME LPAREN RPAREN
    (6) lambda -> . LAMBDA LPAREN formal_args RPAREN LBRACE statements RBRACE
    (7) lambda -> . LAMBDA LPAREN RPAREN LBRACE statements RBRACE
    (15) variable -> . NAME DOT NAME
    (16) variable -> . NAME

    NOT             shift and go to state 28
    MINUS           shift and go to state 29
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 30
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    NIL             shift and go to state 34
    AT              shift and go to state 35
    STRING          shift and go to state 36
    NAME            shift and go to state 43
    LAMBDA          shift and go to state 37

    variable                       shift and go to state 42
    expression                     shift and go to state 74
    lambda                         shift and go to state 31

state 47

    (20) statement -> expression SEMI .

    RBRACE          reduce using rule 20 (statement -> expression SEMI .)
    IF              reduce using rule 20 (statement -> expression SEMI .)
    WHILE           reduce using rule 20 (statement -> expression SEMI .)
    RETURN          reduce using rule 20 (statement -> expression SEMI .)
    NAME            reduce using rule 20 (statement -> expression SEMI .)
    NOT             reduce using rule 20 (statement -> expression SEMI .)
    MINUS           reduce using rule 20 (statement -> expression SEMI .)
    LPAREN          reduce using rule 20 (statement -> expression SEMI .)
    NUMBER          reduce using rule 20 (statement -> expression SEMI .)
    TRUE            reduce using rule 20 (statement -> expression SEMI .)
    FALSE           reduce using rule 20 (statement -> expression SEMI .)
    NIL             reduce using rule 20 (statement -> expression SEMI .)
    AT              reduce using rule 20 (statement -> expression SEMI .)
    STRING          reduce using rule 20 (statement -> expression SEMI .)
    LAMBDA          reduce using rule 20 (statement -> expression SEMI .)


state 48

    (25) expression -> expression EQ . expression
    (23) expression -> . NOT expression
    (24) expression -> . MINUS expression
    (25) expression -> . expression EQ expression
    (26) expression -> . expression GREATER expression
    (27) expression -> . expression LESS expression
    (28) expression -> . expression NOT_EQ expression
    (29) expression -> . expression GREATER_EQ expression
    (30) expression -> . expression LESS_EQ expression
    (31) expression -> . expression PLUS expression
    (32) expression -> . expression MINUS expression
    (33) expression -> . expression MULTIPLY expression
    (34) expression -> . expression DIVIDE expression
    (35) expression -> . LPAREN expression RPAREN
    (36) expression -> . expression OR expression
    (37) expression -> . expression AND expression
    (38) expression -> . NUMBER
    (39) expression -> . lambda
    (40) expression -> . TRUE
    (41) expression -> . FALSE
    (42) expression -> . NIL
    (43) expression -> . AT
    (44) expression -> . STRING
    (45) expression -> . variable
    (46) expression -> . NAME LPAREN args RPAREN
    (47) expression -> . NAME LPAREN RPAREN
    (48) expression -> . NAME DOT NAME LPAREN args RPAREN
    (49) expression -> . NAME DOT NAME LPAREN RPAREN
    (6) lambda -> . LAMBDA LPAREN formal_args RPAREN LBRACE statements RBRACE
    (7) lambda -> . LAMBDA LPAREN RPAREN LBRACE statements RBRACE
    (15) variable -> . NAME DOT NAME
    (16) variable -> . NAME

    NOT             shift and go to state 28
    MINUS           shift and go to state 29
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 30
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    NIL             shift and go to state 34
    AT              shift and go to state 35
    STRING          shift and go to state 36
    NAME            shift and go to state 43
    LAMBDA          shift and go to state 37

    expression                     shift and go to state 75
    lambda                         shift and go to state 31
    variable                       shift and go to state 42

state 49

    (26) expression -> expression GREATER . expression
    (23) expression -> . NOT expression
    (24) expression -> . MINUS expression
    (25) expression -> . expression EQ expression
    (26) expression -> . expression GREATER expression
    (27) expression -> . expression LESS expression
    (28) expression -> . expression NOT_EQ expression
    (29) expression -> . expression GREATER_EQ expression
    (30) expression -> . expression LESS_EQ expression
    (31) expression -> . expression PLUS expression
    (32) expression -> . expression MINUS expression
    (33) expression -> . expression MULTIPLY expression
    (34) expression -> . expression DIVIDE expression
    (35) expression -> . LPAREN expression RPAREN
    (36) expression -> . expression OR expression
    (37) expression -> . expression AND expression
    (38) expression -> . NUMBER
    (39) expression -> . lambda
    (40) expression -> . TRUE
    (41) expression -> . FALSE
    (42) expression -> . NIL
    (43) expression -> . AT
    (44) expression -> . STRING
    (45) expression -> . variable
    (46) expression -> . NAME LPAREN args RPAREN
    (47) expression -> . NAME LPAREN RPAREN
    (48) expression -> . NAME DOT NAME LPAREN args RPAREN
    (49) expression -> . NAME DOT NAME LPAREN RPAREN
    (6) lambda -> . LAMBDA LPAREN formal_args RPAREN LBRACE statements RBRACE
    (7) lambda -> . LAMBDA LPAREN RPAREN LBRACE statements RBRACE
    (15) variable -> . NAME DOT NAME
    (16) variable -> . NAME

    NOT             shift and go to state 28
    MINUS           shift and go to state 29
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 30
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    NIL             shift and go to state 34
    AT              shift and go to state 35
    STRING          shift and go to state 36
    NAME            shift and go to state 43
    LAMBDA          shift and go to state 37

    expression                     shift and go to state 76
    lambda                         shift and go to state 31
    variable                       shift and go to state 42

state 50

    (27) expression -> expression LESS . expression
    (23) expression -> . NOT expression
    (24) expression -> . MINUS expression
    (25) expression -> . expression EQ expression
    (26) expression -> . expression GREATER expression
    (27) expression -> . expression LESS expression
    (28) expression -> . expression NOT_EQ expression
    (29) expression -> . expression GREATER_EQ expression
    (30) expression -> . expression LESS_EQ expression
    (31) expression -> . expression PLUS expression
    (32) expression -> . expression MINUS expression
    (33) expression -> . expression MULTIPLY expression
    (34) expression -> . expression DIVIDE expression
    (35) expression -> . LPAREN expression RPAREN
    (36) expression -> . expression OR expression
    (37) expression -> . expression AND expression
    (38) expression -> . NUMBER
    (39) expression -> . lambda
    (40) expression -> . TRUE
    (41) expression -> . FALSE
    (42) expression -> . NIL
    (43) expression -> . AT
    (44) expression -> . STRING
    (45) expression -> . variable
    (46) expression -> . NAME LPAREN args RPAREN
    (47) expression -> . NAME LPAREN RPAREN
    (48) expression -> . NAME DOT NAME LPAREN args RPAREN
    (49) expression -> . NAME DOT NAME LPAREN RPAREN
    (6) lambda -> . LAMBDA LPAREN formal_args RPAREN LBRACE statements RBRACE
    (7) lambda -> . LAMBDA LPAREN RPAREN LBRACE statements RBRACE
    (15) variable -> . NAME DOT NAME
    (16) variable -> . NAME

    NOT             shift and go to state 28
    MINUS           shift and go to state 29
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 30
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    NIL             shift and go to state 34
    AT              shift and go to state 35
    STRING          shift and go to state 36
    NAME            shift and go to state 43
    LAMBDA          shift and go to state 37

    expression                     shift and go to state 77
    lambda                         shift and go to state 31
    variable                       shift and go to state 42

state 51

    (28) expression -> expression NOT_EQ . expression
    (23) expression -> . NOT expression
    (24) expression -> . MINUS expression
    (25) expression -> . expression EQ expression
    (26) expression -> . expression GREATER expression
    (27) expression -> . expression LESS expression
    (28) expression -> . expression NOT_EQ expression
    (29) expression -> . expression GREATER_EQ expression
    (30) expression -> . expression LESS_EQ expression
    (31) expression -> . expression PLUS expression
    (32) expression -> . expression MINUS expression
    (33) expression -> . expression MULTIPLY expression
    (34) expression -> . expression DIVIDE expression
    (35) expression -> . LPAREN expression RPAREN
    (36) expression -> . expression OR expression
    (37) expression -> . expression AND expression
    (38) expression -> . NUMBER
    (39) expression -> . lambda
    (40) expression -> . TRUE
    (41) expression -> . FALSE
    (42) expression -> . NIL
    (43) expression -> . AT
    (44) expression -> . STRING
    (45) expression -> . variable
    (46) expression -> . NAME LPAREN args RPAREN
    (47) expression -> . NAME LPAREN RPAREN
    (48) expression -> . NAME DOT NAME LPAREN args RPAREN
    (49) expression -> . NAME DOT NAME LPAREN RPAREN
    (6) lambda -> . LAMBDA LPAREN formal_args RPAREN LBRACE statements RBRACE
    (7) lambda -> . LAMBDA LPAREN RPAREN LBRACE statements RBRACE
    (15) variable -> . NAME DOT NAME
    (16) variable -> . NAME

    NOT             shift and go to state 28
    MINUS           shift and go to state 29
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 30
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    NIL             shift and go to state 34
    AT              shift and go to state 35
    STRING          shift and go to state 36
    NAME            shift and go to state 43
    LAMBDA          shift and go to state 37

    expression                     shift and go to state 78
    lambda                         shift and go to state 31
    variable                       shift and go to state 42

state 52

    (29) expression -> expression GREATER_EQ . expression
    (23) expression -> . NOT expression
    (24) expression -> . MINUS expression
    (25) expression -> . expression EQ expression
    (26) expression -> . expression GREATER expression
    (27) expression -> . expression LESS expression
    (28) expression -> . expression NOT_EQ expression
    (29) expression -> . expression GREATER_EQ expression
    (30) expression -> . expression LESS_EQ expression
    (31) expression -> . expression PLUS expression
    (32) expression -> . expression MINUS expression
    (33) expression -> . expression MULTIPLY expression
    (34) expression -> . expression DIVIDE expression
    (35) expression -> . LPAREN expression RPAREN
    (36) expression -> . expression OR expression
    (37) expression -> . expression AND expression
    (38) expression -> . NUMBER
    (39) expression -> . lambda
    (40) expression -> . TRUE
    (41) expression -> . FALSE
    (42) expression -> . NIL
    (43) expression -> . AT
    (44) expression -> . STRING
    (45) expression -> . variable
    (46) expression -> . NAME LPAREN args RPAREN
    (47) expression -> . NAME LPAREN RPAREN
    (48) expression -> . NAME DOT NAME LPAREN args RPAREN
    (49) expression -> . NAME DOT NAME LPAREN RPAREN
    (6) lambda -> . LAMBDA LPAREN formal_args RPAREN LBRACE statements RBRACE
    (7) lambda -> . LAMBDA LPAREN RPAREN LBRACE statements RBRACE
    (15) variable -> . NAME DOT NAME
    (16) variable -> . NAME

    NOT             shift and go to state 28
    MINUS           shift and go to state 29
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 30
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    NIL             shift and go to state 34
    AT              shift and go to state 35
    STRING          shift and go to state 36
    NAME            shift and go to state 43
    LAMBDA          shift and go to state 37

    expression                     shift and go to state 79
    lambda                         shift and go to state 31
    variable                       shift and go to state 42

state 53

    (30) expression -> expression LESS_EQ . expression
    (23) expression -> . NOT expression
    (24) expression -> . MINUS expression
    (25) expression -> . expression EQ expression
    (26) expression -> . expression GREATER expression
    (27) expression -> . expression LESS expression
    (28) expression -> . expression NOT_EQ expression
    (29) expression -> . expression GREATER_EQ expression
    (30) expression -> . expression LESS_EQ expression
    (31) expression -> . expression PLUS expression
    (32) expression -> . expression MINUS expression
    (33) expression -> . expression MULTIPLY expression
    (34) expression -> . expression DIVIDE expression
    (35) expression -> . LPAREN expression RPAREN
    (36) expression -> . expression OR expression
    (37) expression -> . expression AND expression
    (38) expression -> . NUMBER
    (39) expression -> . lambda
    (40) expression -> . TRUE
    (41) expression -> . FALSE
    (42) expression -> . NIL
    (43) expression -> . AT
    (44) expression -> . STRING
    (45) expression -> . variable
    (46) expression -> . NAME LPAREN args RPAREN
    (47) expression -> . NAME LPAREN RPAREN
    (48) expression -> . NAME DOT NAME LPAREN args RPAREN
    (49) expression -> . NAME DOT NAME LPAREN RPAREN
    (6) lambda -> . LAMBDA LPAREN formal_args RPAREN LBRACE statements RBRACE
    (7) lambda -> . LAMBDA LPAREN RPAREN LBRACE statements RBRACE
    (15) variable -> . NAME DOT NAME
    (16) variable -> . NAME

    NOT             shift and go to state 28
    MINUS           shift and go to state 29
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 30
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    NIL             shift and go to state 34
    AT              shift and go to state 35
    STRING          shift and go to state 36
    NAME            shift and go to state 43
    LAMBDA          shift and go to state 37

    expression                     shift and go to state 80
    lambda                         shift and go to state 31
    variable                       shift and go to state 42

state 54

    (31) expression -> expression PLUS . expression
    (23) expression -> . NOT expression
    (24) expression -> . MINUS expression
    (25) expression -> . expression EQ expression
    (26) expression -> . expression GREATER expression
    (27) expression -> . expression LESS expression
    (28) expression -> . expression NOT_EQ expression
    (29) expression -> . expression GREATER_EQ expression
    (30) expression -> . expression LESS_EQ expression
    (31) expression -> . expression PLUS expression
    (32) expression -> . expression MINUS expression
    (33) expression -> . expression MULTIPLY expression
    (34) expression -> . expression DIVIDE expression
    (35) expression -> . LPAREN expression RPAREN
    (36) expression -> . expression OR expression
    (37) expression -> . expression AND expression
    (38) expression -> . NUMBER
    (39) expression -> . lambda
    (40) expression -> . TRUE
    (41) expression -> . FALSE
    (42) expression -> . NIL
    (43) expression -> . AT
    (44) expression -> . STRING
    (45) expression -> . variable
    (46) expression -> . NAME LPAREN args RPAREN
    (47) expression -> . NAME LPAREN RPAREN
    (48) expression -> . NAME DOT NAME LPAREN args RPAREN
    (49) expression -> . NAME DOT NAME LPAREN RPAREN
    (6) lambda -> . LAMBDA LPAREN formal_args RPAREN LBRACE statements RBRACE
    (7) lambda -> . LAMBDA LPAREN RPAREN LBRACE statements RBRACE
    (15) variable -> . NAME DOT NAME
    (16) variable -> . NAME

    NOT             shift and go to state 28
    MINUS           shift and go to state 29
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 30
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    NIL             shift and go to state 34
    AT              shift and go to state 35
    STRING          shift and go to state 36
    NAME            shift and go to state 43
    LAMBDA          shift and go to state 37

    expression                     shift and go to state 81
    lambda                         shift and go to state 31
    variable                       shift and go to state 42

state 55

    (32) expression -> expression MINUS . expression
    (23) expression -> . NOT expression
    (24) expression -> . MINUS expression
    (25) expression -> . expression EQ expression
    (26) expression -> . expression GREATER expression
    (27) expression -> . expression LESS expression
    (28) expression -> . expression NOT_EQ expression
    (29) expression -> . expression GREATER_EQ expression
    (30) expression -> . expression LESS_EQ expression
    (31) expression -> . expression PLUS expression
    (32) expression -> . expression MINUS expression
    (33) expression -> . expression MULTIPLY expression
    (34) expression -> . expression DIVIDE expression
    (35) expression -> . LPAREN expression RPAREN
    (36) expression -> . expression OR expression
    (37) expression -> . expression AND expression
    (38) expression -> . NUMBER
    (39) expression -> . lambda
    (40) expression -> . TRUE
    (41) expression -> . FALSE
    (42) expression -> . NIL
    (43) expression -> . AT
    (44) expression -> . STRING
    (45) expression -> . variable
    (46) expression -> . NAME LPAREN args RPAREN
    (47) expression -> . NAME LPAREN RPAREN
    (48) expression -> . NAME DOT NAME LPAREN args RPAREN
    (49) expression -> . NAME DOT NAME LPAREN RPAREN
    (6) lambda -> . LAMBDA LPAREN formal_args RPAREN LBRACE statements RBRACE
    (7) lambda -> . LAMBDA LPAREN RPAREN LBRACE statements RBRACE
    (15) variable -> . NAME DOT NAME
    (16) variable -> . NAME

    NOT             shift and go to state 28
    MINUS           shift and go to state 29
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 30
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    NIL             shift and go to state 34
    AT              shift and go to state 35
    STRING          shift and go to state 36
    NAME            shift and go to state 43
    LAMBDA          shift and go to state 37

    expression                     shift and go to state 82
    lambda                         shift and go to state 31
    variable                       shift and go to state 42

state 56

    (33) expression -> expression MULTIPLY . expression
    (23) expression -> . NOT expression
    (24) expression -> . MINUS expression
    (25) expression -> . expression EQ expression
    (26) expression -> . expression GREATER expression
    (27) expression -> . expression LESS expression
    (28) expression -> . expression NOT_EQ expression
    (29) expression -> . expression GREATER_EQ expression
    (30) expression -> . expression LESS_EQ expression
    (31) expression -> . expression PLUS expression
    (32) expression -> . expression MINUS expression
    (33) expression -> . expression MULTIPLY expression
    (34) expression -> . expression DIVIDE expression
    (35) expression -> . LPAREN expression RPAREN
    (36) expression -> . expression OR expression
    (37) expression -> . expression AND expression
    (38) expression -> . NUMBER
    (39) expression -> . lambda
    (40) expression -> . TRUE
    (41) expression -> . FALSE
    (42) expression -> . NIL
    (43) expression -> . AT
    (44) expression -> . STRING
    (45) expression -> . variable
    (46) expression -> . NAME LPAREN args RPAREN
    (47) expression -> . NAME LPAREN RPAREN
    (48) expression -> . NAME DOT NAME LPAREN args RPAREN
    (49) expression -> . NAME DOT NAME LPAREN RPAREN
    (6) lambda -> . LAMBDA LPAREN formal_args RPAREN LBRACE statements RBRACE
    (7) lambda -> . LAMBDA LPAREN RPAREN LBRACE statements RBRACE
    (15) variable -> . NAME DOT NAME
    (16) variable -> . NAME

    NOT             shift and go to state 28
    MINUS           shift and go to state 29
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 30
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    NIL             shift and go to state 34
    AT              shift and go to state 35
    STRING          shift and go to state 36
    NAME            shift and go to state 43
    LAMBDA          shift and go to state 37

    expression                     shift and go to state 83
    lambda                         shift and go to state 31
    variable                       shift and go to state 42

state 57

    (34) expression -> expression DIVIDE . expression
    (23) expression -> . NOT expression
    (24) expression -> . MINUS expression
    (25) expression -> . expression EQ expression
    (26) expression -> . expression GREATER expression
    (27) expression -> . expression LESS expression
    (28) expression -> . expression NOT_EQ expression
    (29) expression -> . expression GREATER_EQ expression
    (30) expression -> . expression LESS_EQ expression
    (31) expression -> . expression PLUS expression
    (32) expression -> . expression MINUS expression
    (33) expression -> . expression MULTIPLY expression
    (34) expression -> . expression DIVIDE expression
    (35) expression -> . LPAREN expression RPAREN
    (36) expression -> . expression OR expression
    (37) expression -> . expression AND expression
    (38) expression -> . NUMBER
    (39) expression -> . lambda
    (40) expression -> . TRUE
    (41) expression -> . FALSE
    (42) expression -> . NIL
    (43) expression -> . AT
    (44) expression -> . STRING
    (45) expression -> . variable
    (46) expression -> . NAME LPAREN args RPAREN
    (47) expression -> . NAME LPAREN RPAREN
    (48) expression -> . NAME DOT NAME LPAREN args RPAREN
    (49) expression -> . NAME DOT NAME LPAREN RPAREN
    (6) lambda -> . LAMBDA LPAREN formal_args RPAREN LBRACE statements RBRACE
    (7) lambda -> . LAMBDA LPAREN RPAREN LBRACE statements RBRACE
    (15) variable -> . NAME DOT NAME
    (16) variable -> . NAME

    NOT             shift and go to state 28
    MINUS           shift and go to state 29
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 30
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    NIL             shift and go to state 34
    AT              shift and go to state 35
    STRING          shift and go to state 36
    NAME            shift and go to state 43
    LAMBDA          shift and go to state 37

    expression                     shift and go to state 84
    lambda                         shift and go to state 31
    variable                       shift and go to state 42

state 58

    (36) expression -> expression OR . expression
    (23) expression -> . NOT expression
    (24) expression -> . MINUS expression
    (25) expression -> . expression EQ expression
    (26) expression -> . expression GREATER expression
    (27) expression -> . expression LESS expression
    (28) expression -> . expression NOT_EQ expression
    (29) expression -> . expression GREATER_EQ expression
    (30) expression -> . expression LESS_EQ expression
    (31) expression -> . expression PLUS expression
    (32) expression -> . expression MINUS expression
    (33) expression -> . expression MULTIPLY expression
    (34) expression -> . expression DIVIDE expression
    (35) expression -> . LPAREN expression RPAREN
    (36) expression -> . expression OR expression
    (37) expression -> . expression AND expression
    (38) expression -> . NUMBER
    (39) expression -> . lambda
    (40) expression -> . TRUE
    (41) expression -> . FALSE
    (42) expression -> . NIL
    (43) expression -> . AT
    (44) expression -> . STRING
    (45) expression -> . variable
    (46) expression -> . NAME LPAREN args RPAREN
    (47) expression -> . NAME LPAREN RPAREN
    (48) expression -> . NAME DOT NAME LPAREN args RPAREN
    (49) expression -> . NAME DOT NAME LPAREN RPAREN
    (6) lambda -> . LAMBDA LPAREN formal_args RPAREN LBRACE statements RBRACE
    (7) lambda -> . LAMBDA LPAREN RPAREN LBRACE statements RBRACE
    (15) variable -> . NAME DOT NAME
    (16) variable -> . NAME

    NOT             shift and go to state 28
    MINUS           shift and go to state 29
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 30
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    NIL             shift and go to state 34
    AT              shift and go to state 35
    STRING          shift and go to state 36
    NAME            shift and go to state 43
    LAMBDA          shift and go to state 37

    expression                     shift and go to state 85
    lambda                         shift and go to state 31
    variable                       shift and go to state 42

state 59

    (37) expression -> expression AND . expression
    (23) expression -> . NOT expression
    (24) expression -> . MINUS expression
    (25) expression -> . expression EQ expression
    (26) expression -> . expression GREATER expression
    (27) expression -> . expression LESS expression
    (28) expression -> . expression NOT_EQ expression
    (29) expression -> . expression GREATER_EQ expression
    (30) expression -> . expression LESS_EQ expression
    (31) expression -> . expression PLUS expression
    (32) expression -> . expression MINUS expression
    (33) expression -> . expression MULTIPLY expression
    (34) expression -> . expression DIVIDE expression
    (35) expression -> . LPAREN expression RPAREN
    (36) expression -> . expression OR expression
    (37) expression -> . expression AND expression
    (38) expression -> . NUMBER
    (39) expression -> . lambda
    (40) expression -> . TRUE
    (41) expression -> . FALSE
    (42) expression -> . NIL
    (43) expression -> . AT
    (44) expression -> . STRING
    (45) expression -> . variable
    (46) expression -> . NAME LPAREN args RPAREN
    (47) expression -> . NAME LPAREN RPAREN
    (48) expression -> . NAME DOT NAME LPAREN args RPAREN
    (49) expression -> . NAME DOT NAME LPAREN RPAREN
    (6) lambda -> . LAMBDA LPAREN formal_args RPAREN LBRACE statements RBRACE
    (7) lambda -> . LAMBDA LPAREN RPAREN LBRACE statements RBRACE
    (15) variable -> . NAME DOT NAME
    (16) variable -> . NAME

    NOT             shift and go to state 28
    MINUS           shift and go to state 29
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 30
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    NIL             shift and go to state 34
    AT              shift and go to state 35
    STRING          shift and go to state 36
    NAME            shift and go to state 43
    LAMBDA          shift and go to state 37

    expression                     shift and go to state 86
    lambda                         shift and go to state 31
    variable                       shift and go to state 42

state 60

    (17) statement -> IF LPAREN . expression RPAREN LBRACE statements RBRACE
    (18) statement -> IF LPAREN . expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (23) expression -> . NOT expression
    (24) expression -> . MINUS expression
    (25) expression -> . expression EQ expression
    (26) expression -> . expression GREATER expression
    (27) expression -> . expression LESS expression
    (28) expression -> . expression NOT_EQ expression
    (29) expression -> . expression GREATER_EQ expression
    (30) expression -> . expression LESS_EQ expression
    (31) expression -> . expression PLUS expression
    (32) expression -> . expression MINUS expression
    (33) expression -> . expression MULTIPLY expression
    (34) expression -> . expression DIVIDE expression
    (35) expression -> . LPAREN expression RPAREN
    (36) expression -> . expression OR expression
    (37) expression -> . expression AND expression
    (38) expression -> . NUMBER
    (39) expression -> . lambda
    (40) expression -> . TRUE
    (41) expression -> . FALSE
    (42) expression -> . NIL
    (43) expression -> . AT
    (44) expression -> . STRING
    (45) expression -> . variable
    (46) expression -> . NAME LPAREN args RPAREN
    (47) expression -> . NAME LPAREN RPAREN
    (48) expression -> . NAME DOT NAME LPAREN args RPAREN
    (49) expression -> . NAME DOT NAME LPAREN RPAREN
    (6) lambda -> . LAMBDA LPAREN formal_args RPAREN LBRACE statements RBRACE
    (7) lambda -> . LAMBDA LPAREN RPAREN LBRACE statements RBRACE
    (15) variable -> . NAME DOT NAME
    (16) variable -> . NAME

    NOT             shift and go to state 28
    MINUS           shift and go to state 29
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 30
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    NIL             shift and go to state 34
    AT              shift and go to state 35
    STRING          shift and go to state 36
    NAME            shift and go to state 43
    LAMBDA          shift and go to state 37

    expression                     shift and go to state 87
    lambda                         shift and go to state 31
    variable                       shift and go to state 42

state 61

    (19) statement -> WHILE LPAREN . expression RPAREN LBRACE statements RBRACE
    (23) expression -> . NOT expression
    (24) expression -> . MINUS expression
    (25) expression -> . expression EQ expression
    (26) expression -> . expression GREATER expression
    (27) expression -> . expression LESS expression
    (28) expression -> . expression NOT_EQ expression
    (29) expression -> . expression GREATER_EQ expression
    (30) expression -> . expression LESS_EQ expression
    (31) expression -> . expression PLUS expression
    (32) expression -> . expression MINUS expression
    (33) expression -> . expression MULTIPLY expression
    (34) expression -> . expression DIVIDE expression
    (35) expression -> . LPAREN expression RPAREN
    (36) expression -> . expression OR expression
    (37) expression -> . expression AND expression
    (38) expression -> . NUMBER
    (39) expression -> . lambda
    (40) expression -> . TRUE
    (41) expression -> . FALSE
    (42) expression -> . NIL
    (43) expression -> . AT
    (44) expression -> . STRING
    (45) expression -> . variable
    (46) expression -> . NAME LPAREN args RPAREN
    (47) expression -> . NAME LPAREN RPAREN
    (48) expression -> . NAME DOT NAME LPAREN args RPAREN
    (49) expression -> . NAME DOT NAME LPAREN RPAREN
    (6) lambda -> . LAMBDA LPAREN formal_args RPAREN LBRACE statements RBRACE
    (7) lambda -> . LAMBDA LPAREN RPAREN LBRACE statements RBRACE
    (15) variable -> . NAME DOT NAME
    (16) variable -> . NAME

    NOT             shift and go to state 28
    MINUS           shift and go to state 29
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 30
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    NIL             shift and go to state 34
    AT              shift and go to state 35
    STRING          shift and go to state 36
    NAME            shift and go to state 43
    LAMBDA          shift and go to state 37

    expression                     shift and go to state 88
    lambda                         shift and go to state 31
    variable                       shift and go to state 42

state 62

    (21) statement -> RETURN expression . SEMI
    (25) expression -> expression . EQ expression
    (26) expression -> expression . GREATER expression
    (27) expression -> expression . LESS expression
    (28) expression -> expression . NOT_EQ expression
    (29) expression -> expression . GREATER_EQ expression
    (30) expression -> expression . LESS_EQ expression
    (31) expression -> expression . PLUS expression
    (32) expression -> expression . MINUS expression
    (33) expression -> expression . MULTIPLY expression
    (34) expression -> expression . DIVIDE expression
    (36) expression -> expression . OR expression
    (37) expression -> expression . AND expression

    SEMI            shift and go to state 89
    EQ              shift and go to state 48
    GREATER         shift and go to state 49
    LESS            shift and go to state 50
    NOT_EQ          shift and go to state 51
    GREATER_EQ      shift and go to state 52
    LESS_EQ         shift and go to state 53
    PLUS            shift and go to state 54
    MINUS           shift and go to state 55
    MULTIPLY        shift and go to state 56
    DIVIDE          shift and go to state 57
    OR              shift and go to state 58
    AND             shift and go to state 59


state 63

    (22) statement -> RETURN SEMI .

    RBRACE          reduce using rule 22 (statement -> RETURN SEMI .)
    IF              reduce using rule 22 (statement -> RETURN SEMI .)
    WHILE           reduce using rule 22 (statement -> RETURN SEMI .)
    RETURN          reduce using rule 22 (statement -> RETURN SEMI .)
    NAME            reduce using rule 22 (statement -> RETURN SEMI .)
    NOT             reduce using rule 22 (statement -> RETURN SEMI .)
    MINUS           reduce using rule 22 (statement -> RETURN SEMI .)
    LPAREN          reduce using rule 22 (statement -> RETURN SEMI .)
    NUMBER          reduce using rule 22 (statement -> RETURN SEMI .)
    TRUE            reduce using rule 22 (statement -> RETURN SEMI .)
    FALSE           reduce using rule 22 (statement -> RETURN SEMI .)
    NIL             reduce using rule 22 (statement -> RETURN SEMI .)
    AT              reduce using rule 22 (statement -> RETURN SEMI .)
    STRING          reduce using rule 22 (statement -> RETURN SEMI .)
    LAMBDA          reduce using rule 22 (statement -> RETURN SEMI .)


state 64

    (23) expression -> NOT expression .
    (25) expression -> expression . EQ expression
    (26) expression -> expression . GREATER expression
    (27) expression -> expression . LESS expression
    (28) expression -> expression . NOT_EQ expression
    (29) expression -> expression . GREATER_EQ expression
    (30) expression -> expression . LESS_EQ expression
    (31) expression -> expression . PLUS expression
    (32) expression -> expression . MINUS expression
    (33) expression -> expression . MULTIPLY expression
    (34) expression -> expression . DIVIDE expression
    (36) expression -> expression . OR expression
    (37) expression -> expression . AND expression

    SEMI            reduce using rule 23 (expression -> NOT expression .)
    EQ              reduce using rule 23 (expression -> NOT expression .)
    GREATER         reduce using rule 23 (expression -> NOT expression .)
    LESS            reduce using rule 23 (expression -> NOT expression .)
    NOT_EQ          reduce using rule 23 (expression -> NOT expression .)
    GREATER_EQ      reduce using rule 23 (expression -> NOT expression .)
    LESS_EQ         reduce using rule 23 (expression -> NOT expression .)
    PLUS            reduce using rule 23 (expression -> NOT expression .)
    MINUS           reduce using rule 23 (expression -> NOT expression .)
    MULTIPLY        reduce using rule 23 (expression -> NOT expression .)
    DIVIDE          reduce using rule 23 (expression -> NOT expression .)
    OR              reduce using rule 23 (expression -> NOT expression .)
    AND             reduce using rule 23 (expression -> NOT expression .)
    RPAREN          reduce using rule 23 (expression -> NOT expression .)
    COMMA           reduce using rule 23 (expression -> NOT expression .)

  ! EQ              [ shift and go to state 48 ]
  ! GREATER         [ shift and go to state 49 ]
  ! LESS            [ shift and go to state 50 ]
  ! NOT_EQ          [ shift and go to state 51 ]
  ! GREATER_EQ      [ shift and go to state 52 ]
  ! LESS_EQ         [ shift and go to state 53 ]
  ! PLUS            [ shift and go to state 54 ]
  ! MINUS           [ shift and go to state 55 ]
  ! MULTIPLY        [ shift and go to state 56 ]
  ! DIVIDE          [ shift and go to state 57 ]
  ! OR              [ shift and go to state 58 ]
  ! AND             [ shift and go to state 59 ]


state 65

    (24) expression -> MINUS expression .
    (25) expression -> expression . EQ expression
    (26) expression -> expression . GREATER expression
    (27) expression -> expression . LESS expression
    (28) expression -> expression . NOT_EQ expression
    (29) expression -> expression . GREATER_EQ expression
    (30) expression -> expression . LESS_EQ expression
    (31) expression -> expression . PLUS expression
    (32) expression -> expression . MINUS expression
    (33) expression -> expression . MULTIPLY expression
    (34) expression -> expression . DIVIDE expression
    (36) expression -> expression . OR expression
    (37) expression -> expression . AND expression

    SEMI            reduce using rule 24 (expression -> MINUS expression .)
    EQ              reduce using rule 24 (expression -> MINUS expression .)
    GREATER         reduce using rule 24 (expression -> MINUS expression .)
    LESS            reduce using rule 24 (expression -> MINUS expression .)
    NOT_EQ          reduce using rule 24 (expression -> MINUS expression .)
    GREATER_EQ      reduce using rule 24 (expression -> MINUS expression .)
    LESS_EQ         reduce using rule 24 (expression -> MINUS expression .)
    PLUS            reduce using rule 24 (expression -> MINUS expression .)
    MINUS           reduce using rule 24 (expression -> MINUS expression .)
    MULTIPLY        reduce using rule 24 (expression -> MINUS expression .)
    DIVIDE          reduce using rule 24 (expression -> MINUS expression .)
    OR              reduce using rule 24 (expression -> MINUS expression .)
    AND             reduce using rule 24 (expression -> MINUS expression .)
    RPAREN          reduce using rule 24 (expression -> MINUS expression .)
    COMMA           reduce using rule 24 (expression -> MINUS expression .)

  ! EQ              [ shift and go to state 48 ]
  ! GREATER         [ shift and go to state 49 ]
  ! LESS            [ shift and go to state 50 ]
  ! NOT_EQ          [ shift and go to state 51 ]
  ! GREATER_EQ      [ shift and go to state 52 ]
  ! LESS_EQ         [ shift and go to state 53 ]
  ! PLUS            [ shift and go to state 54 ]
  ! MINUS           [ shift and go to state 55 ]
  ! MULTIPLY        [ shift and go to state 56 ]
  ! DIVIDE          [ shift and go to state 57 ]
  ! OR              [ shift and go to state 58 ]
  ! AND             [ shift and go to state 59 ]


state 66

    (6) lambda -> LAMBDA LPAREN . formal_args RPAREN LBRACE statements RBRACE
    (7) lambda -> LAMBDA LPAREN . RPAREN LBRACE statements RBRACE
    (8) formal_args -> . formal_args COMMA formal_arg
    (9) formal_args -> . formal_arg
    (10) formal_arg -> . NAME
    (11) formal_arg -> . REF NAME

    RPAREN          shift and go to state 91
    NAME            shift and go to state 8
    REF             shift and go to state 12

    formal_args                    shift and go to state 90
    formal_arg                     shift and go to state 11

state 67

    (4) func -> FUNC NAME LPAREN formal_args RPAREN LBRACE statements RBRACE .

    FUNC            reduce using rule 4 (func -> FUNC NAME LPAREN formal_args RPAREN LBRACE statements RBRACE .)
    $end            reduce using rule 4 (func -> FUNC NAME LPAREN formal_args RPAREN LBRACE statements RBRACE .)


state 68

    (15) variable -> NAME DOT NAME .
    (48) expression -> NAME DOT NAME . LPAREN args RPAREN
    (49) expression -> NAME DOT NAME . LPAREN RPAREN

    ASSIGN          reduce using rule 15 (variable -> NAME DOT NAME .)
    SEMI            reduce using rule 15 (variable -> NAME DOT NAME .)
    EQ              reduce using rule 15 (variable -> NAME DOT NAME .)
    GREATER         reduce using rule 15 (variable -> NAME DOT NAME .)
    LESS            reduce using rule 15 (variable -> NAME DOT NAME .)
    NOT_EQ          reduce using rule 15 (variable -> NAME DOT NAME .)
    GREATER_EQ      reduce using rule 15 (variable -> NAME DOT NAME .)
    LESS_EQ         reduce using rule 15 (variable -> NAME DOT NAME .)
    PLUS            reduce using rule 15 (variable -> NAME DOT NAME .)
    MINUS           reduce using rule 15 (variable -> NAME DOT NAME .)
    MULTIPLY        reduce using rule 15 (variable -> NAME DOT NAME .)
    DIVIDE          reduce using rule 15 (variable -> NAME DOT NAME .)
    OR              reduce using rule 15 (variable -> NAME DOT NAME .)
    AND             reduce using rule 15 (variable -> NAME DOT NAME .)
    LPAREN          shift and go to state 92


state 69

    (46) expression -> NAME LPAREN args . RPAREN
    (50) args -> args . COMMA expression

    RPAREN          shift and go to state 93
    COMMA           shift and go to state 94


state 70

    (47) expression -> NAME LPAREN RPAREN .

    SEMI            reduce using rule 47 (expression -> NAME LPAREN RPAREN .)
    EQ              reduce using rule 47 (expression -> NAME LPAREN RPAREN .)
    GREATER         reduce using rule 47 (expression -> NAME LPAREN RPAREN .)
    LESS            reduce using rule 47 (expression -> NAME LPAREN RPAREN .)
    NOT_EQ          reduce using rule 47 (expression -> NAME LPAREN RPAREN .)
    GREATER_EQ      reduce using rule 47 (expression -> NAME LPAREN RPAREN .)
    LESS_EQ         reduce using rule 47 (expression -> NAME LPAREN RPAREN .)
    PLUS            reduce using rule 47 (expression -> NAME LPAREN RPAREN .)
    MINUS           reduce using rule 47 (expression -> NAME LPAREN RPAREN .)
    MULTIPLY        reduce using rule 47 (expression -> NAME LPAREN RPAREN .)
    DIVIDE          reduce using rule 47 (expression -> NAME LPAREN RPAREN .)
    OR              reduce using rule 47 (expression -> NAME LPAREN RPAREN .)
    AND             reduce using rule 47 (expression -> NAME LPAREN RPAREN .)
    RPAREN          reduce using rule 47 (expression -> NAME LPAREN RPAREN .)
    COMMA           reduce using rule 47 (expression -> NAME LPAREN RPAREN .)


state 71

    (51) args -> expression .
    (25) expression -> expression . EQ expression
    (26) expression -> expression . GREATER expression
    (27) expression -> expression . LESS expression
    (28) expression -> expression . NOT_EQ expression
    (29) expression -> expression . GREATER_EQ expression
    (30) expression -> expression . LESS_EQ expression
    (31) expression -> expression . PLUS expression
    (32) expression -> expression . MINUS expression
    (33) expression -> expression . MULTIPLY expression
    (34) expression -> expression . DIVIDE expression
    (36) expression -> expression . OR expression
    (37) expression -> expression . AND expression

    RPAREN          reduce using rule 51 (args -> expression .)
    COMMA           reduce using rule 51 (args -> expression .)
    EQ              shift and go to state 48
    GREATER         shift and go to state 49
    LESS            shift and go to state 50
    NOT_EQ          shift and go to state 51
    GREATER_EQ      shift and go to state 52
    LESS_EQ         shift and go to state 53
    PLUS            shift and go to state 54
    MINUS           shift and go to state 55
    MULTIPLY        shift and go to state 56
    DIVIDE          shift and go to state 57
    OR              shift and go to state 58
    AND             shift and go to state 59


state 72

    (35) expression -> LPAREN expression RPAREN .

    SEMI            reduce using rule 35 (expression -> LPAREN expression RPAREN .)
    EQ              reduce using rule 35 (expression -> LPAREN expression RPAREN .)
    GREATER         reduce using rule 35 (expression -> LPAREN expression RPAREN .)
    LESS            reduce using rule 35 (expression -> LPAREN expression RPAREN .)
    NOT_EQ          reduce using rule 35 (expression -> LPAREN expression RPAREN .)
    GREATER_EQ      reduce using rule 35 (expression -> LPAREN expression RPAREN .)
    LESS_EQ         reduce using rule 35 (expression -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 35 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 35 (expression -> LPAREN expression RPAREN .)
    MULTIPLY        reduce using rule 35 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 35 (expression -> LPAREN expression RPAREN .)
    OR              reduce using rule 35 (expression -> LPAREN expression RPAREN .)
    AND             reduce using rule 35 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 35 (expression -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 35 (expression -> LPAREN expression RPAREN .)


state 73

    (48) expression -> NAME DOT . NAME LPAREN args RPAREN
    (49) expression -> NAME DOT . NAME LPAREN RPAREN
    (15) variable -> NAME DOT . NAME

    NAME            shift and go to state 95


state 74

    (14) statement -> variable ASSIGN expression . SEMI
    (25) expression -> expression . EQ expression
    (26) expression -> expression . GREATER expression
    (27) expression -> expression . LESS expression
    (28) expression -> expression . NOT_EQ expression
    (29) expression -> expression . GREATER_EQ expression
    (30) expression -> expression . LESS_EQ expression
    (31) expression -> expression . PLUS expression
    (32) expression -> expression . MINUS expression
    (33) expression -> expression . MULTIPLY expression
    (34) expression -> expression . DIVIDE expression
    (36) expression -> expression . OR expression
    (37) expression -> expression . AND expression

    SEMI            shift and go to state 96
    EQ              shift and go to state 48
    GREATER         shift and go to state 49
    LESS            shift and go to state 50
    NOT_EQ          shift and go to state 51
    GREATER_EQ      shift and go to state 52
    LESS_EQ         shift and go to state 53
    PLUS            shift and go to state 54
    MINUS           shift and go to state 55
    MULTIPLY        shift and go to state 56
    DIVIDE          shift and go to state 57
    OR              shift and go to state 58
    AND             shift and go to state 59


state 75

    (25) expression -> expression EQ expression .
    (25) expression -> expression . EQ expression
    (26) expression -> expression . GREATER expression
    (27) expression -> expression . LESS expression
    (28) expression -> expression . NOT_EQ expression
    (29) expression -> expression . GREATER_EQ expression
    (30) expression -> expression . LESS_EQ expression
    (31) expression -> expression . PLUS expression
    (32) expression -> expression . MINUS expression
    (33) expression -> expression . MULTIPLY expression
    (34) expression -> expression . DIVIDE expression
    (36) expression -> expression . OR expression
    (37) expression -> expression . AND expression

    SEMI            reduce using rule 25 (expression -> expression EQ expression .)
    EQ              reduce using rule 25 (expression -> expression EQ expression .)
    GREATER         reduce using rule 25 (expression -> expression EQ expression .)
    LESS            reduce using rule 25 (expression -> expression EQ expression .)
    NOT_EQ          reduce using rule 25 (expression -> expression EQ expression .)
    GREATER_EQ      reduce using rule 25 (expression -> expression EQ expression .)
    LESS_EQ         reduce using rule 25 (expression -> expression EQ expression .)
    OR              reduce using rule 25 (expression -> expression EQ expression .)
    AND             reduce using rule 25 (expression -> expression EQ expression .)
    RPAREN          reduce using rule 25 (expression -> expression EQ expression .)
    COMMA           reduce using rule 25 (expression -> expression EQ expression .)
    PLUS            shift and go to state 54
    MINUS           shift and go to state 55
    MULTIPLY        shift and go to state 56
    DIVIDE          shift and go to state 57

  ! PLUS            [ reduce using rule 25 (expression -> expression EQ expression .) ]
  ! MINUS           [ reduce using rule 25 (expression -> expression EQ expression .) ]
  ! MULTIPLY        [ reduce using rule 25 (expression -> expression EQ expression .) ]
  ! DIVIDE          [ reduce using rule 25 (expression -> expression EQ expression .) ]
  ! EQ              [ shift and go to state 48 ]
  ! GREATER         [ shift and go to state 49 ]
  ! LESS            [ shift and go to state 50 ]
  ! NOT_EQ          [ shift and go to state 51 ]
  ! GREATER_EQ      [ shift and go to state 52 ]
  ! LESS_EQ         [ shift and go to state 53 ]
  ! OR              [ shift and go to state 58 ]
  ! AND             [ shift and go to state 59 ]


state 76

    (26) expression -> expression GREATER expression .
    (25) expression -> expression . EQ expression
    (26) expression -> expression . GREATER expression
    (27) expression -> expression . LESS expression
    (28) expression -> expression . NOT_EQ expression
    (29) expression -> expression . GREATER_EQ expression
    (30) expression -> expression . LESS_EQ expression
    (31) expression -> expression . PLUS expression
    (32) expression -> expression . MINUS expression
    (33) expression -> expression . MULTIPLY expression
    (34) expression -> expression . DIVIDE expression
    (36) expression -> expression . OR expression
    (37) expression -> expression . AND expression

    SEMI            reduce using rule 26 (expression -> expression GREATER expression .)
    EQ              reduce using rule 26 (expression -> expression GREATER expression .)
    GREATER         reduce using rule 26 (expression -> expression GREATER expression .)
    LESS            reduce using rule 26 (expression -> expression GREATER expression .)
    NOT_EQ          reduce using rule 26 (expression -> expression GREATER expression .)
    GREATER_EQ      reduce using rule 26 (expression -> expression GREATER expression .)
    LESS_EQ         reduce using rule 26 (expression -> expression GREATER expression .)
    OR              reduce using rule 26 (expression -> expression GREATER expression .)
    AND             reduce using rule 26 (expression -> expression GREATER expression .)
    RPAREN          reduce using rule 26 (expression -> expression GREATER expression .)
    COMMA           reduce using rule 26 (expression -> expression GREATER expression .)
    PLUS            shift and go to state 54
    MINUS           shift and go to state 55
    MULTIPLY        shift and go to state 56
    DIVIDE          shift and go to state 57

  ! PLUS            [ reduce using rule 26 (expression -> expression GREATER expression .) ]
  ! MINUS           [ reduce using rule 26 (expression -> expression GREATER expression .) ]
  ! MULTIPLY        [ reduce using rule 26 (expression -> expression GREATER expression .) ]
  ! DIVIDE          [ reduce using rule 26 (expression -> expression GREATER expression .) ]
  ! EQ              [ shift and go to state 48 ]
  ! GREATER         [ shift and go to state 49 ]
  ! LESS            [ shift and go to state 50 ]
  ! NOT_EQ          [ shift and go to state 51 ]
  ! GREATER_EQ      [ shift and go to state 52 ]
  ! LESS_EQ         [ shift and go to state 53 ]
  ! OR              [ shift and go to state 58 ]
  ! AND             [ shift and go to state 59 ]


state 77

    (27) expression -> expression LESS expression .
    (25) expression -> expression . EQ expression
    (26) expression -> expression . GREATER expression
    (27) expression -> expression . LESS expression
    (28) expression -> expression . NOT_EQ expression
    (29) expression -> expression . GREATER_EQ expression
    (30) expression -> expression . LESS_EQ expression
    (31) expression -> expression . PLUS expression
    (32) expression -> expression . MINUS expression
    (33) expression -> expression . MULTIPLY expression
    (34) expression -> expression . DIVIDE expression
    (36) expression -> expression . OR expression
    (37) expression -> expression . AND expression

    SEMI            reduce using rule 27 (expression -> expression LESS expression .)
    EQ              reduce using rule 27 (expression -> expression LESS expression .)
    GREATER         reduce using rule 27 (expression -> expression LESS expression .)
    LESS            reduce using rule 27 (expression -> expression LESS expression .)
    NOT_EQ          reduce using rule 27 (expression -> expression LESS expression .)
    GREATER_EQ      reduce using rule 27 (expression -> expression LESS expression .)
    LESS_EQ         reduce using rule 27 (expression -> expression LESS expression .)
    OR              reduce using rule 27 (expression -> expression LESS expression .)
    AND             reduce using rule 27 (expression -> expression LESS expression .)
    RPAREN          reduce using rule 27 (expression -> expression LESS expression .)
    COMMA           reduce using rule 27 (expression -> expression LESS expression .)
    PLUS            shift and go to state 54
    MINUS           shift and go to state 55
    MULTIPLY        shift and go to state 56
    DIVIDE          shift and go to state 57

  ! PLUS            [ reduce using rule 27 (expression -> expression LESS expression .) ]
  ! MINUS           [ reduce using rule 27 (expression -> expression LESS expression .) ]
  ! MULTIPLY        [ reduce using rule 27 (expression -> expression LESS expression .) ]
  ! DIVIDE          [ reduce using rule 27 (expression -> expression LESS expression .) ]
  ! EQ              [ shift and go to state 48 ]
  ! GREATER         [ shift and go to state 49 ]
  ! LESS            [ shift and go to state 50 ]
  ! NOT_EQ          [ shift and go to state 51 ]
  ! GREATER_EQ      [ shift and go to state 52 ]
  ! LESS_EQ         [ shift and go to state 53 ]
  ! OR              [ shift and go to state 58 ]
  ! AND             [ shift and go to state 59 ]


state 78

    (28) expression -> expression NOT_EQ expression .
    (25) expression -> expression . EQ expression
    (26) expression -> expression . GREATER expression
    (27) expression -> expression . LESS expression
    (28) expression -> expression . NOT_EQ expression
    (29) expression -> expression . GREATER_EQ expression
    (30) expression -> expression . LESS_EQ expression
    (31) expression -> expression . PLUS expression
    (32) expression -> expression . MINUS expression
    (33) expression -> expression . MULTIPLY expression
    (34) expression -> expression . DIVIDE expression
    (36) expression -> expression . OR expression
    (37) expression -> expression . AND expression

    SEMI            reduce using rule 28 (expression -> expression NOT_EQ expression .)
    EQ              reduce using rule 28 (expression -> expression NOT_EQ expression .)
    GREATER         reduce using rule 28 (expression -> expression NOT_EQ expression .)
    LESS            reduce using rule 28 (expression -> expression NOT_EQ expression .)
    NOT_EQ          reduce using rule 28 (expression -> expression NOT_EQ expression .)
    GREATER_EQ      reduce using rule 28 (expression -> expression NOT_EQ expression .)
    LESS_EQ         reduce using rule 28 (expression -> expression NOT_EQ expression .)
    OR              reduce using rule 28 (expression -> expression NOT_EQ expression .)
    AND             reduce using rule 28 (expression -> expression NOT_EQ expression .)
    RPAREN          reduce using rule 28 (expression -> expression NOT_EQ expression .)
    COMMA           reduce using rule 28 (expression -> expression NOT_EQ expression .)
    PLUS            shift and go to state 54
    MINUS           shift and go to state 55
    MULTIPLY        shift and go to state 56
    DIVIDE          shift and go to state 57

  ! PLUS            [ reduce using rule 28 (expression -> expression NOT_EQ expression .) ]
  ! MINUS           [ reduce using rule 28 (expression -> expression NOT_EQ expression .) ]
  ! MULTIPLY        [ reduce using rule 28 (expression -> expression NOT_EQ expression .) ]
  ! DIVIDE          [ reduce using rule 28 (expression -> expression NOT_EQ expression .) ]
  ! EQ              [ shift and go to state 48 ]
  ! GREATER         [ shift and go to state 49 ]
  ! LESS            [ shift and go to state 50 ]
  ! NOT_EQ          [ shift and go to state 51 ]
  ! GREATER_EQ      [ shift and go to state 52 ]
  ! LESS_EQ         [ shift and go to state 53 ]
  ! OR              [ shift and go to state 58 ]
  ! AND             [ shift and go to state 59 ]


state 79

    (29) expression -> expression GREATER_EQ expression .
    (25) expression -> expression . EQ expression
    (26) expression -> expression . GREATER expression
    (27) expression -> expression . LESS expression
    (28) expression -> expression . NOT_EQ expression
    (29) expression -> expression . GREATER_EQ expression
    (30) expression -> expression . LESS_EQ expression
    (31) expression -> expression . PLUS expression
    (32) expression -> expression . MINUS expression
    (33) expression -> expression . MULTIPLY expression
    (34) expression -> expression . DIVIDE expression
    (36) expression -> expression . OR expression
    (37) expression -> expression . AND expression

    SEMI            reduce using rule 29 (expression -> expression GREATER_EQ expression .)
    EQ              reduce using rule 29 (expression -> expression GREATER_EQ expression .)
    GREATER         reduce using rule 29 (expression -> expression GREATER_EQ expression .)
    LESS            reduce using rule 29 (expression -> expression GREATER_EQ expression .)
    NOT_EQ          reduce using rule 29 (expression -> expression GREATER_EQ expression .)
    GREATER_EQ      reduce using rule 29 (expression -> expression GREATER_EQ expression .)
    LESS_EQ         reduce using rule 29 (expression -> expression GREATER_EQ expression .)
    OR              reduce using rule 29 (expression -> expression GREATER_EQ expression .)
    AND             reduce using rule 29 (expression -> expression GREATER_EQ expression .)
    RPAREN          reduce using rule 29 (expression -> expression GREATER_EQ expression .)
    COMMA           reduce using rule 29 (expression -> expression GREATER_EQ expression .)
    PLUS            shift and go to state 54
    MINUS           shift and go to state 55
    MULTIPLY        shift and go to state 56
    DIVIDE          shift and go to state 57

  ! PLUS            [ reduce using rule 29 (expression -> expression GREATER_EQ expression .) ]
  ! MINUS           [ reduce using rule 29 (expression -> expression GREATER_EQ expression .) ]
  ! MULTIPLY        [ reduce using rule 29 (expression -> expression GREATER_EQ expression .) ]
  ! DIVIDE          [ reduce using rule 29 (expression -> expression GREATER_EQ expression .) ]
  ! EQ              [ shift and go to state 48 ]
  ! GREATER         [ shift and go to state 49 ]
  ! LESS            [ shift and go to state 50 ]
  ! NOT_EQ          [ shift and go to state 51 ]
  ! GREATER_EQ      [ shift and go to state 52 ]
  ! LESS_EQ         [ shift and go to state 53 ]
  ! OR              [ shift and go to state 58 ]
  ! AND             [ shift and go to state 59 ]


state 80

    (30) expression -> expression LESS_EQ expression .
    (25) expression -> expression . EQ expression
    (26) expression -> expression . GREATER expression
    (27) expression -> expression . LESS expression
    (28) expression -> expression . NOT_EQ expression
    (29) expression -> expression . GREATER_EQ expression
    (30) expression -> expression . LESS_EQ expression
    (31) expression -> expression . PLUS expression
    (32) expression -> expression . MINUS expression
    (33) expression -> expression . MULTIPLY expression
    (34) expression -> expression . DIVIDE expression
    (36) expression -> expression . OR expression
    (37) expression -> expression . AND expression

    SEMI            reduce using rule 30 (expression -> expression LESS_EQ expression .)
    EQ              reduce using rule 30 (expression -> expression LESS_EQ expression .)
    GREATER         reduce using rule 30 (expression -> expression LESS_EQ expression .)
    LESS            reduce using rule 30 (expression -> expression LESS_EQ expression .)
    NOT_EQ          reduce using rule 30 (expression -> expression LESS_EQ expression .)
    GREATER_EQ      reduce using rule 30 (expression -> expression LESS_EQ expression .)
    LESS_EQ         reduce using rule 30 (expression -> expression LESS_EQ expression .)
    OR              reduce using rule 30 (expression -> expression LESS_EQ expression .)
    AND             reduce using rule 30 (expression -> expression LESS_EQ expression .)
    RPAREN          reduce using rule 30 (expression -> expression LESS_EQ expression .)
    COMMA           reduce using rule 30 (expression -> expression LESS_EQ expression .)
    PLUS            shift and go to state 54
    MINUS           shift and go to state 55
    MULTIPLY        shift and go to state 56
    DIVIDE          shift and go to state 57

  ! PLUS            [ reduce using rule 30 (expression -> expression LESS_EQ expression .) ]
  ! MINUS           [ reduce using rule 30 (expression -> expression LESS_EQ expression .) ]
  ! MULTIPLY        [ reduce using rule 30 (expression -> expression LESS_EQ expression .) ]
  ! DIVIDE          [ reduce using rule 30 (expression -> expression LESS_EQ expression .) ]
  ! EQ              [ shift and go to state 48 ]
  ! GREATER         [ shift and go to state 49 ]
  ! LESS            [ shift and go to state 50 ]
  ! NOT_EQ          [ shift and go to state 51 ]
  ! GREATER_EQ      [ shift and go to state 52 ]
  ! LESS_EQ         [ shift and go to state 53 ]
  ! OR              [ shift and go to state 58 ]
  ! AND             [ shift and go to state 59 ]


state 81

    (31) expression -> expression PLUS expression .
    (25) expression -> expression . EQ expression
    (26) expression -> expression . GREATER expression
    (27) expression -> expression . LESS expression
    (28) expression -> expression . NOT_EQ expression
    (29) expression -> expression . GREATER_EQ expression
    (30) expression -> expression . LESS_EQ expression
    (31) expression -> expression . PLUS expression
    (32) expression -> expression . MINUS expression
    (33) expression -> expression . MULTIPLY expression
    (34) expression -> expression . DIVIDE expression
    (36) expression -> expression . OR expression
    (37) expression -> expression . AND expression

    SEMI            reduce using rule 31 (expression -> expression PLUS expression .)
    EQ              reduce using rule 31 (expression -> expression PLUS expression .)
    GREATER         reduce using rule 31 (expression -> expression PLUS expression .)
    LESS            reduce using rule 31 (expression -> expression PLUS expression .)
    NOT_EQ          reduce using rule 31 (expression -> expression PLUS expression .)
    GREATER_EQ      reduce using rule 31 (expression -> expression PLUS expression .)
    LESS_EQ         reduce using rule 31 (expression -> expression PLUS expression .)
    PLUS            reduce using rule 31 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 31 (expression -> expression PLUS expression .)
    OR              reduce using rule 31 (expression -> expression PLUS expression .)
    AND             reduce using rule 31 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 31 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 31 (expression -> expression PLUS expression .)
    MULTIPLY        shift and go to state 56
    DIVIDE          shift and go to state 57

  ! MULTIPLY        [ reduce using rule 31 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 31 (expression -> expression PLUS expression .) ]
  ! EQ              [ shift and go to state 48 ]
  ! GREATER         [ shift and go to state 49 ]
  ! LESS            [ shift and go to state 50 ]
  ! NOT_EQ          [ shift and go to state 51 ]
  ! GREATER_EQ      [ shift and go to state 52 ]
  ! LESS_EQ         [ shift and go to state 53 ]
  ! PLUS            [ shift and go to state 54 ]
  ! MINUS           [ shift and go to state 55 ]
  ! OR              [ shift and go to state 58 ]
  ! AND             [ shift and go to state 59 ]


state 82

    (32) expression -> expression MINUS expression .
    (25) expression -> expression . EQ expression
    (26) expression -> expression . GREATER expression
    (27) expression -> expression . LESS expression
    (28) expression -> expression . NOT_EQ expression
    (29) expression -> expression . GREATER_EQ expression
    (30) expression -> expression . LESS_EQ expression
    (31) expression -> expression . PLUS expression
    (32) expression -> expression . MINUS expression
    (33) expression -> expression . MULTIPLY expression
    (34) expression -> expression . DIVIDE expression
    (36) expression -> expression . OR expression
    (37) expression -> expression . AND expression

    SEMI            reduce using rule 32 (expression -> expression MINUS expression .)
    EQ              reduce using rule 32 (expression -> expression MINUS expression .)
    GREATER         reduce using rule 32 (expression -> expression MINUS expression .)
    LESS            reduce using rule 32 (expression -> expression MINUS expression .)
    NOT_EQ          reduce using rule 32 (expression -> expression MINUS expression .)
    GREATER_EQ      reduce using rule 32 (expression -> expression MINUS expression .)
    LESS_EQ         reduce using rule 32 (expression -> expression MINUS expression .)
    PLUS            reduce using rule 32 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 32 (expression -> expression MINUS expression .)
    OR              reduce using rule 32 (expression -> expression MINUS expression .)
    AND             reduce using rule 32 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 32 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 32 (expression -> expression MINUS expression .)
    MULTIPLY        shift and go to state 56
    DIVIDE          shift and go to state 57

  ! MULTIPLY        [ reduce using rule 32 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 32 (expression -> expression MINUS expression .) ]
  ! EQ              [ shift and go to state 48 ]
  ! GREATER         [ shift and go to state 49 ]
  ! LESS            [ shift and go to state 50 ]
  ! NOT_EQ          [ shift and go to state 51 ]
  ! GREATER_EQ      [ shift and go to state 52 ]
  ! LESS_EQ         [ shift and go to state 53 ]
  ! PLUS            [ shift and go to state 54 ]
  ! MINUS           [ shift and go to state 55 ]
  ! OR              [ shift and go to state 58 ]
  ! AND             [ shift and go to state 59 ]


state 83

    (33) expression -> expression MULTIPLY expression .
    (25) expression -> expression . EQ expression
    (26) expression -> expression . GREATER expression
    (27) expression -> expression . LESS expression
    (28) expression -> expression . NOT_EQ expression
    (29) expression -> expression . GREATER_EQ expression
    (30) expression -> expression . LESS_EQ expression
    (31) expression -> expression . PLUS expression
    (32) expression -> expression . MINUS expression
    (33) expression -> expression . MULTIPLY expression
    (34) expression -> expression . DIVIDE expression
    (36) expression -> expression . OR expression
    (37) expression -> expression . AND expression

    SEMI            reduce using rule 33 (expression -> expression MULTIPLY expression .)
    EQ              reduce using rule 33 (expression -> expression MULTIPLY expression .)
    GREATER         reduce using rule 33 (expression -> expression MULTIPLY expression .)
    LESS            reduce using rule 33 (expression -> expression MULTIPLY expression .)
    NOT_EQ          reduce using rule 33 (expression -> expression MULTIPLY expression .)
    GREATER_EQ      reduce using rule 33 (expression -> expression MULTIPLY expression .)
    LESS_EQ         reduce using rule 33 (expression -> expression MULTIPLY expression .)
    PLUS            reduce using rule 33 (expression -> expression MULTIPLY expression .)
    MINUS           reduce using rule 33 (expression -> expression MULTIPLY expression .)
    MULTIPLY        reduce using rule 33 (expression -> expression MULTIPLY expression .)
    DIVIDE          reduce using rule 33 (expression -> expression MULTIPLY expression .)
    OR              reduce using rule 33 (expression -> expression MULTIPLY expression .)
    AND             reduce using rule 33 (expression -> expression MULTIPLY expression .)
    RPAREN          reduce using rule 33 (expression -> expression MULTIPLY expression .)
    COMMA           reduce using rule 33 (expression -> expression MULTIPLY expression .)

  ! EQ              [ shift and go to state 48 ]
  ! GREATER         [ shift and go to state 49 ]
  ! LESS            [ shift and go to state 50 ]
  ! NOT_EQ          [ shift and go to state 51 ]
  ! GREATER_EQ      [ shift and go to state 52 ]
  ! LESS_EQ         [ shift and go to state 53 ]
  ! PLUS            [ shift and go to state 54 ]
  ! MINUS           [ shift and go to state 55 ]
  ! MULTIPLY        [ shift and go to state 56 ]
  ! DIVIDE          [ shift and go to state 57 ]
  ! OR              [ shift and go to state 58 ]
  ! AND             [ shift and go to state 59 ]


state 84

    (34) expression -> expression DIVIDE expression .
    (25) expression -> expression . EQ expression
    (26) expression -> expression . GREATER expression
    (27) expression -> expression . LESS expression
    (28) expression -> expression . NOT_EQ expression
    (29) expression -> expression . GREATER_EQ expression
    (30) expression -> expression . LESS_EQ expression
    (31) expression -> expression . PLUS expression
    (32) expression -> expression . MINUS expression
    (33) expression -> expression . MULTIPLY expression
    (34) expression -> expression . DIVIDE expression
    (36) expression -> expression . OR expression
    (37) expression -> expression . AND expression

    SEMI            reduce using rule 34 (expression -> expression DIVIDE expression .)
    EQ              reduce using rule 34 (expression -> expression DIVIDE expression .)
    GREATER         reduce using rule 34 (expression -> expression DIVIDE expression .)
    LESS            reduce using rule 34 (expression -> expression DIVIDE expression .)
    NOT_EQ          reduce using rule 34 (expression -> expression DIVIDE expression .)
    GREATER_EQ      reduce using rule 34 (expression -> expression DIVIDE expression .)
    LESS_EQ         reduce using rule 34 (expression -> expression DIVIDE expression .)
    PLUS            reduce using rule 34 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 34 (expression -> expression DIVIDE expression .)
    MULTIPLY        reduce using rule 34 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 34 (expression -> expression DIVIDE expression .)
    OR              reduce using rule 34 (expression -> expression DIVIDE expression .)
    AND             reduce using rule 34 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 34 (expression -> expression DIVIDE expression .)
    COMMA           reduce using rule 34 (expression -> expression DIVIDE expression .)

  ! EQ              [ shift and go to state 48 ]
  ! GREATER         [ shift and go to state 49 ]
  ! LESS            [ shift and go to state 50 ]
  ! NOT_EQ          [ shift and go to state 51 ]
  ! GREATER_EQ      [ shift and go to state 52 ]
  ! LESS_EQ         [ shift and go to state 53 ]
  ! PLUS            [ shift and go to state 54 ]
  ! MINUS           [ shift and go to state 55 ]
  ! MULTIPLY        [ shift and go to state 56 ]
  ! DIVIDE          [ shift and go to state 57 ]
  ! OR              [ shift and go to state 58 ]
  ! AND             [ shift and go to state 59 ]


state 85

    (36) expression -> expression OR expression .
    (25) expression -> expression . EQ expression
    (26) expression -> expression . GREATER expression
    (27) expression -> expression . LESS expression
    (28) expression -> expression . NOT_EQ expression
    (29) expression -> expression . GREATER_EQ expression
    (30) expression -> expression . LESS_EQ expression
    (31) expression -> expression . PLUS expression
    (32) expression -> expression . MINUS expression
    (33) expression -> expression . MULTIPLY expression
    (34) expression -> expression . DIVIDE expression
    (36) expression -> expression . OR expression
    (37) expression -> expression . AND expression

    SEMI            reduce using rule 36 (expression -> expression OR expression .)
    OR              reduce using rule 36 (expression -> expression OR expression .)
    RPAREN          reduce using rule 36 (expression -> expression OR expression .)
    COMMA           reduce using rule 36 (expression -> expression OR expression .)
    EQ              shift and go to state 48
    GREATER         shift and go to state 49
    LESS            shift and go to state 50
    NOT_EQ          shift and go to state 51
    GREATER_EQ      shift and go to state 52
    LESS_EQ         shift and go to state 53
    PLUS            shift and go to state 54
    MINUS           shift and go to state 55
    MULTIPLY        shift and go to state 56
    DIVIDE          shift and go to state 57
    AND             shift and go to state 59

  ! EQ              [ reduce using rule 36 (expression -> expression OR expression .) ]
  ! GREATER         [ reduce using rule 36 (expression -> expression OR expression .) ]
  ! LESS            [ reduce using rule 36 (expression -> expression OR expression .) ]
  ! NOT_EQ          [ reduce using rule 36 (expression -> expression OR expression .) ]
  ! GREATER_EQ      [ reduce using rule 36 (expression -> expression OR expression .) ]
  ! LESS_EQ         [ reduce using rule 36 (expression -> expression OR expression .) ]
  ! PLUS            [ reduce using rule 36 (expression -> expression OR expression .) ]
  ! MINUS           [ reduce using rule 36 (expression -> expression OR expression .) ]
  ! MULTIPLY        [ reduce using rule 36 (expression -> expression OR expression .) ]
  ! DIVIDE          [ reduce using rule 36 (expression -> expression OR expression .) ]
  ! AND             [ reduce using rule 36 (expression -> expression OR expression .) ]
  ! OR              [ shift and go to state 58 ]


state 86

    (37) expression -> expression AND expression .
    (25) expression -> expression . EQ expression
    (26) expression -> expression . GREATER expression
    (27) expression -> expression . LESS expression
    (28) expression -> expression . NOT_EQ expression
    (29) expression -> expression . GREATER_EQ expression
    (30) expression -> expression . LESS_EQ expression
    (31) expression -> expression . PLUS expression
    (32) expression -> expression . MINUS expression
    (33) expression -> expression . MULTIPLY expression
    (34) expression -> expression . DIVIDE expression
    (36) expression -> expression . OR expression
    (37) expression -> expression . AND expression

    SEMI            reduce using rule 37 (expression -> expression AND expression .)
    OR              reduce using rule 37 (expression -> expression AND expression .)
    AND             reduce using rule 37 (expression -> expression AND expression .)
    RPAREN          reduce using rule 37 (expression -> expression AND expression .)
    COMMA           reduce using rule 37 (expression -> expression AND expression .)
    EQ              shift and go to state 48
    GREATER         shift and go to state 49
    LESS            shift and go to state 50
    NOT_EQ          shift and go to state 51
    GREATER_EQ      shift and go to state 52
    LESS_EQ         shift and go to state 53
    PLUS            shift and go to state 54
    MINUS           shift and go to state 55
    MULTIPLY        shift and go to state 56
    DIVIDE          shift and go to state 57

  ! EQ              [ reduce using rule 37 (expression -> expression AND expression .) ]
  ! GREATER         [ reduce using rule 37 (expression -> expression AND expression .) ]
  ! LESS            [ reduce using rule 37 (expression -> expression AND expression .) ]
  ! NOT_EQ          [ reduce using rule 37 (expression -> expression AND expression .) ]
  ! GREATER_EQ      [ reduce using rule 37 (expression -> expression AND expression .) ]
  ! LESS_EQ         [ reduce using rule 37 (expression -> expression AND expression .) ]
  ! PLUS            [ reduce using rule 37 (expression -> expression AND expression .) ]
  ! MINUS           [ reduce using rule 37 (expression -> expression AND expression .) ]
  ! MULTIPLY        [ reduce using rule 37 (expression -> expression AND expression .) ]
  ! DIVIDE          [ reduce using rule 37 (expression -> expression AND expression .) ]
  ! OR              [ shift and go to state 58 ]
  ! AND             [ shift and go to state 59 ]


state 87

    (17) statement -> IF LPAREN expression . RPAREN LBRACE statements RBRACE
    (18) statement -> IF LPAREN expression . RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (25) expression -> expression . EQ expression
    (26) expression -> expression . GREATER expression
    (27) expression -> expression . LESS expression
    (28) expression -> expression . NOT_EQ expression
    (29) expression -> expression . GREATER_EQ expression
    (30) expression -> expression . LESS_EQ expression
    (31) expression -> expression . PLUS expression
    (32) expression -> expression . MINUS expression
    (33) expression -> expression . MULTIPLY expression
    (34) expression -> expression . DIVIDE expression
    (36) expression -> expression . OR expression
    (37) expression -> expression . AND expression

    RPAREN          shift and go to state 97
    EQ              shift and go to state 48
    GREATER         shift and go to state 49
    LESS            shift and go to state 50
    NOT_EQ          shift and go to state 51
    GREATER_EQ      shift and go to state 52
    LESS_EQ         shift and go to state 53
    PLUS            shift and go to state 54
    MINUS           shift and go to state 55
    MULTIPLY        shift and go to state 56
    DIVIDE          shift and go to state 57
    OR              shift and go to state 58
    AND             shift and go to state 59


state 88

    (19) statement -> WHILE LPAREN expression . RPAREN LBRACE statements RBRACE
    (25) expression -> expression . EQ expression
    (26) expression -> expression . GREATER expression
    (27) expression -> expression . LESS expression
    (28) expression -> expression . NOT_EQ expression
    (29) expression -> expression . GREATER_EQ expression
    (30) expression -> expression . LESS_EQ expression
    (31) expression -> expression . PLUS expression
    (32) expression -> expression . MINUS expression
    (33) expression -> expression . MULTIPLY expression
    (34) expression -> expression . DIVIDE expression
    (36) expression -> expression . OR expression
    (37) expression -> expression . AND expression

    RPAREN          shift and go to state 98
    EQ              shift and go to state 48
    GREATER         shift and go to state 49
    LESS            shift and go to state 50
    NOT_EQ          shift and go to state 51
    GREATER_EQ      shift and go to state 52
    LESS_EQ         shift and go to state 53
    PLUS            shift and go to state 54
    MINUS           shift and go to state 55
    MULTIPLY        shift and go to state 56
    DIVIDE          shift and go to state 57
    OR              shift and go to state 58
    AND             shift and go to state 59


state 89

    (21) statement -> RETURN expression SEMI .

    RBRACE          reduce using rule 21 (statement -> RETURN expression SEMI .)
    IF              reduce using rule 21 (statement -> RETURN expression SEMI .)
    WHILE           reduce using rule 21 (statement -> RETURN expression SEMI .)
    RETURN          reduce using rule 21 (statement -> RETURN expression SEMI .)
    NAME            reduce using rule 21 (statement -> RETURN expression SEMI .)
    NOT             reduce using rule 21 (statement -> RETURN expression SEMI .)
    MINUS           reduce using rule 21 (statement -> RETURN expression SEMI .)
    LPAREN          reduce using rule 21 (statement -> RETURN expression SEMI .)
    NUMBER          reduce using rule 21 (statement -> RETURN expression SEMI .)
    TRUE            reduce using rule 21 (statement -> RETURN expression SEMI .)
    FALSE           reduce using rule 21 (statement -> RETURN expression SEMI .)
    NIL             reduce using rule 21 (statement -> RETURN expression SEMI .)
    AT              reduce using rule 21 (statement -> RETURN expression SEMI .)
    STRING          reduce using rule 21 (statement -> RETURN expression SEMI .)
    LAMBDA          reduce using rule 21 (statement -> RETURN expression SEMI .)


state 90

    (6) lambda -> LAMBDA LPAREN formal_args . RPAREN LBRACE statements RBRACE
    (8) formal_args -> formal_args . COMMA formal_arg

    RPAREN          shift and go to state 99
    COMMA           shift and go to state 14


state 91

    (7) lambda -> LAMBDA LPAREN RPAREN . LBRACE statements RBRACE

    LBRACE          shift and go to state 100


state 92

    (48) expression -> NAME DOT NAME LPAREN . args RPAREN
    (49) expression -> NAME DOT NAME LPAREN . RPAREN
    (50) args -> . args COMMA expression
    (51) args -> . expression
    (23) expression -> . NOT expression
    (24) expression -> . MINUS expression
    (25) expression -> . expression EQ expression
    (26) expression -> . expression GREATER expression
    (27) expression -> . expression LESS expression
    (28) expression -> . expression NOT_EQ expression
    (29) expression -> . expression GREATER_EQ expression
    (30) expression -> . expression LESS_EQ expression
    (31) expression -> . expression PLUS expression
    (32) expression -> . expression MINUS expression
    (33) expression -> . expression MULTIPLY expression
    (34) expression -> . expression DIVIDE expression
    (35) expression -> . LPAREN expression RPAREN
    (36) expression -> . expression OR expression
    (37) expression -> . expression AND expression
    (38) expression -> . NUMBER
    (39) expression -> . lambda
    (40) expression -> . TRUE
    (41) expression -> . FALSE
    (42) expression -> . NIL
    (43) expression -> . AT
    (44) expression -> . STRING
    (45) expression -> . variable
    (46) expression -> . NAME LPAREN args RPAREN
    (47) expression -> . NAME LPAREN RPAREN
    (48) expression -> . NAME DOT NAME LPAREN args RPAREN
    (49) expression -> . NAME DOT NAME LPAREN RPAREN
    (6) lambda -> . LAMBDA LPAREN formal_args RPAREN LBRACE statements RBRACE
    (7) lambda -> . LAMBDA LPAREN RPAREN LBRACE statements RBRACE
    (15) variable -> . NAME DOT NAME
    (16) variable -> . NAME

    RPAREN          shift and go to state 102
    NOT             shift and go to state 28
    MINUS           shift and go to state 29
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 30
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    NIL             shift and go to state 34
    AT              shift and go to state 35
    STRING          shift and go to state 36
    NAME            shift and go to state 43
    LAMBDA          shift and go to state 37

    args                           shift and go to state 101
    expression                     shift and go to state 71
    lambda                         shift and go to state 31
    variable                       shift and go to state 42

state 93

    (46) expression -> NAME LPAREN args RPAREN .

    SEMI            reduce using rule 46 (expression -> NAME LPAREN args RPAREN .)
    EQ              reduce using rule 46 (expression -> NAME LPAREN args RPAREN .)
    GREATER         reduce using rule 46 (expression -> NAME LPAREN args RPAREN .)
    LESS            reduce using rule 46 (expression -> NAME LPAREN args RPAREN .)
    NOT_EQ          reduce using rule 46 (expression -> NAME LPAREN args RPAREN .)
    GREATER_EQ      reduce using rule 46 (expression -> NAME LPAREN args RPAREN .)
    LESS_EQ         reduce using rule 46 (expression -> NAME LPAREN args RPAREN .)
    PLUS            reduce using rule 46 (expression -> NAME LPAREN args RPAREN .)
    MINUS           reduce using rule 46 (expression -> NAME LPAREN args RPAREN .)
    MULTIPLY        reduce using rule 46 (expression -> NAME LPAREN args RPAREN .)
    DIVIDE          reduce using rule 46 (expression -> NAME LPAREN args RPAREN .)
    OR              reduce using rule 46 (expression -> NAME LPAREN args RPAREN .)
    AND             reduce using rule 46 (expression -> NAME LPAREN args RPAREN .)
    RPAREN          reduce using rule 46 (expression -> NAME LPAREN args RPAREN .)
    COMMA           reduce using rule 46 (expression -> NAME LPAREN args RPAREN .)


state 94

    (50) args -> args COMMA . expression
    (23) expression -> . NOT expression
    (24) expression -> . MINUS expression
    (25) expression -> . expression EQ expression
    (26) expression -> . expression GREATER expression
    (27) expression -> . expression LESS expression
    (28) expression -> . expression NOT_EQ expression
    (29) expression -> . expression GREATER_EQ expression
    (30) expression -> . expression LESS_EQ expression
    (31) expression -> . expression PLUS expression
    (32) expression -> . expression MINUS expression
    (33) expression -> . expression MULTIPLY expression
    (34) expression -> . expression DIVIDE expression
    (35) expression -> . LPAREN expression RPAREN
    (36) expression -> . expression OR expression
    (37) expression -> . expression AND expression
    (38) expression -> . NUMBER
    (39) expression -> . lambda
    (40) expression -> . TRUE
    (41) expression -> . FALSE
    (42) expression -> . NIL
    (43) expression -> . AT
    (44) expression -> . STRING
    (45) expression -> . variable
    (46) expression -> . NAME LPAREN args RPAREN
    (47) expression -> . NAME LPAREN RPAREN
    (48) expression -> . NAME DOT NAME LPAREN args RPAREN
    (49) expression -> . NAME DOT NAME LPAREN RPAREN
    (6) lambda -> . LAMBDA LPAREN formal_args RPAREN LBRACE statements RBRACE
    (7) lambda -> . LAMBDA LPAREN RPAREN LBRACE statements RBRACE
    (15) variable -> . NAME DOT NAME
    (16) variable -> . NAME

    NOT             shift and go to state 28
    MINUS           shift and go to state 29
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 30
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    NIL             shift and go to state 34
    AT              shift and go to state 35
    STRING          shift and go to state 36
    NAME            shift and go to state 43
    LAMBDA          shift and go to state 37

    expression                     shift and go to state 103
    lambda                         shift and go to state 31
    variable                       shift and go to state 42

state 95

    (48) expression -> NAME DOT NAME . LPAREN args RPAREN
    (49) expression -> NAME DOT NAME . LPAREN RPAREN
    (15) variable -> NAME DOT NAME .

    LPAREN          shift and go to state 92
    RPAREN          reduce using rule 15 (variable -> NAME DOT NAME .)
    EQ              reduce using rule 15 (variable -> NAME DOT NAME .)
    GREATER         reduce using rule 15 (variable -> NAME DOT NAME .)
    LESS            reduce using rule 15 (variable -> NAME DOT NAME .)
    NOT_EQ          reduce using rule 15 (variable -> NAME DOT NAME .)
    GREATER_EQ      reduce using rule 15 (variable -> NAME DOT NAME .)
    LESS_EQ         reduce using rule 15 (variable -> NAME DOT NAME .)
    PLUS            reduce using rule 15 (variable -> NAME DOT NAME .)
    MINUS           reduce using rule 15 (variable -> NAME DOT NAME .)
    MULTIPLY        reduce using rule 15 (variable -> NAME DOT NAME .)
    DIVIDE          reduce using rule 15 (variable -> NAME DOT NAME .)
    OR              reduce using rule 15 (variable -> NAME DOT NAME .)
    AND             reduce using rule 15 (variable -> NAME DOT NAME .)
    SEMI            reduce using rule 15 (variable -> NAME DOT NAME .)
    COMMA           reduce using rule 15 (variable -> NAME DOT NAME .)


state 96

    (14) statement -> variable ASSIGN expression SEMI .

    RBRACE          reduce using rule 14 (statement -> variable ASSIGN expression SEMI .)
    IF              reduce using rule 14 (statement -> variable ASSIGN expression SEMI .)
    WHILE           reduce using rule 14 (statement -> variable ASSIGN expression SEMI .)
    RETURN          reduce using rule 14 (statement -> variable ASSIGN expression SEMI .)
    NAME            reduce using rule 14 (statement -> variable ASSIGN expression SEMI .)
    NOT             reduce using rule 14 (statement -> variable ASSIGN expression SEMI .)
    MINUS           reduce using rule 14 (statement -> variable ASSIGN expression SEMI .)
    LPAREN          reduce using rule 14 (statement -> variable ASSIGN expression SEMI .)
    NUMBER          reduce using rule 14 (statement -> variable ASSIGN expression SEMI .)
    TRUE            reduce using rule 14 (statement -> variable ASSIGN expression SEMI .)
    FALSE           reduce using rule 14 (statement -> variable ASSIGN expression SEMI .)
    NIL             reduce using rule 14 (statement -> variable ASSIGN expression SEMI .)
    AT              reduce using rule 14 (statement -> variable ASSIGN expression SEMI .)
    STRING          reduce using rule 14 (statement -> variable ASSIGN expression SEMI .)
    LAMBDA          reduce using rule 14 (statement -> variable ASSIGN expression SEMI .)


state 97

    (17) statement -> IF LPAREN expression RPAREN . LBRACE statements RBRACE
    (18) statement -> IF LPAREN expression RPAREN . LBRACE statements RBRACE ELSE LBRACE statements RBRACE

    LBRACE          shift and go to state 104


state 98

    (19) statement -> WHILE LPAREN expression RPAREN . LBRACE statements RBRACE

    LBRACE          shift and go to state 105


state 99

    (6) lambda -> LAMBDA LPAREN formal_args RPAREN . LBRACE statements RBRACE

    LBRACE          shift and go to state 106


state 100

    (7) lambda -> LAMBDA LPAREN RPAREN LBRACE . statements RBRACE
    (12) statements -> . statements statement
    (13) statements -> . statement
    (14) statement -> . variable ASSIGN expression SEMI
    (17) statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE
    (18) statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (19) statement -> . WHILE LPAREN expression RPAREN LBRACE statements RBRACE
    (20) statement -> . expression SEMI
    (21) statement -> . RETURN expression SEMI
    (22) statement -> . RETURN SEMI
    (15) variable -> . NAME DOT NAME
    (16) variable -> . NAME
    (23) expression -> . NOT expression
    (24) expression -> . MINUS expression
    (25) expression -> . expression EQ expression
    (26) expression -> . expression GREATER expression
    (27) expression -> . expression LESS expression
    (28) expression -> . expression NOT_EQ expression
    (29) expression -> . expression GREATER_EQ expression
    (30) expression -> . expression LESS_EQ expression
    (31) expression -> . expression PLUS expression
    (32) expression -> . expression MINUS expression
    (33) expression -> . expression MULTIPLY expression
    (34) expression -> . expression DIVIDE expression
    (35) expression -> . LPAREN expression RPAREN
    (36) expression -> . expression OR expression
    (37) expression -> . expression AND expression
    (38) expression -> . NUMBER
    (39) expression -> . lambda
    (40) expression -> . TRUE
    (41) expression -> . FALSE
    (42) expression -> . NIL
    (43) expression -> . AT
    (44) expression -> . STRING
    (45) expression -> . variable
    (46) expression -> . NAME LPAREN args RPAREN
    (47) expression -> . NAME LPAREN RPAREN
    (48) expression -> . NAME DOT NAME LPAREN args RPAREN
    (49) expression -> . NAME DOT NAME LPAREN RPAREN
    (6) lambda -> . LAMBDA LPAREN formal_args RPAREN LBRACE statements RBRACE
    (7) lambda -> . LAMBDA LPAREN RPAREN LBRACE statements RBRACE

    IF              shift and go to state 25
    WHILE           shift and go to state 26
    RETURN          shift and go to state 27
    NAME            shift and go to state 19
    NOT             shift and go to state 28
    MINUS           shift and go to state 29
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 30
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    NIL             shift and go to state 34
    AT              shift and go to state 35
    STRING          shift and go to state 36
    LAMBDA          shift and go to state 37

    statements                     shift and go to state 107
    statement                      shift and go to state 22
    variable                       shift and go to state 23
    expression                     shift and go to state 24
    lambda                         shift and go to state 31

state 101

    (48) expression -> NAME DOT NAME LPAREN args . RPAREN
    (50) args -> args . COMMA expression

    RPAREN          shift and go to state 108
    COMMA           shift and go to state 94


state 102

    (49) expression -> NAME DOT NAME LPAREN RPAREN .

    SEMI            reduce using rule 49 (expression -> NAME DOT NAME LPAREN RPAREN .)
    EQ              reduce using rule 49 (expression -> NAME DOT NAME LPAREN RPAREN .)
    GREATER         reduce using rule 49 (expression -> NAME DOT NAME LPAREN RPAREN .)
    LESS            reduce using rule 49 (expression -> NAME DOT NAME LPAREN RPAREN .)
    NOT_EQ          reduce using rule 49 (expression -> NAME DOT NAME LPAREN RPAREN .)
    GREATER_EQ      reduce using rule 49 (expression -> NAME DOT NAME LPAREN RPAREN .)
    LESS_EQ         reduce using rule 49 (expression -> NAME DOT NAME LPAREN RPAREN .)
    PLUS            reduce using rule 49 (expression -> NAME DOT NAME LPAREN RPAREN .)
    MINUS           reduce using rule 49 (expression -> NAME DOT NAME LPAREN RPAREN .)
    MULTIPLY        reduce using rule 49 (expression -> NAME DOT NAME LPAREN RPAREN .)
    DIVIDE          reduce using rule 49 (expression -> NAME DOT NAME LPAREN RPAREN .)
    OR              reduce using rule 49 (expression -> NAME DOT NAME LPAREN RPAREN .)
    AND             reduce using rule 49 (expression -> NAME DOT NAME LPAREN RPAREN .)
    RPAREN          reduce using rule 49 (expression -> NAME DOT NAME LPAREN RPAREN .)
    COMMA           reduce using rule 49 (expression -> NAME DOT NAME LPAREN RPAREN .)


state 103

    (50) args -> args COMMA expression .
    (25) expression -> expression . EQ expression
    (26) expression -> expression . GREATER expression
    (27) expression -> expression . LESS expression
    (28) expression -> expression . NOT_EQ expression
    (29) expression -> expression . GREATER_EQ expression
    (30) expression -> expression . LESS_EQ expression
    (31) expression -> expression . PLUS expression
    (32) expression -> expression . MINUS expression
    (33) expression -> expression . MULTIPLY expression
    (34) expression -> expression . DIVIDE expression
    (36) expression -> expression . OR expression
    (37) expression -> expression . AND expression

    RPAREN          reduce using rule 50 (args -> args COMMA expression .)
    COMMA           reduce using rule 50 (args -> args COMMA expression .)
    EQ              shift and go to state 48
    GREATER         shift and go to state 49
    LESS            shift and go to state 50
    NOT_EQ          shift and go to state 51
    GREATER_EQ      shift and go to state 52
    LESS_EQ         shift and go to state 53
    PLUS            shift and go to state 54
    MINUS           shift and go to state 55
    MULTIPLY        shift and go to state 56
    DIVIDE          shift and go to state 57
    OR              shift and go to state 58
    AND             shift and go to state 59


state 104

    (17) statement -> IF LPAREN expression RPAREN LBRACE . statements RBRACE
    (18) statement -> IF LPAREN expression RPAREN LBRACE . statements RBRACE ELSE LBRACE statements RBRACE
    (12) statements -> . statements statement
    (13) statements -> . statement
    (14) statement -> . variable ASSIGN expression SEMI
    (17) statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE
    (18) statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (19) statement -> . WHILE LPAREN expression RPAREN LBRACE statements RBRACE
    (20) statement -> . expression SEMI
    (21) statement -> . RETURN expression SEMI
    (22) statement -> . RETURN SEMI
    (15) variable -> . NAME DOT NAME
    (16) variable -> . NAME
    (23) expression -> . NOT expression
    (24) expression -> . MINUS expression
    (25) expression -> . expression EQ expression
    (26) expression -> . expression GREATER expression
    (27) expression -> . expression LESS expression
    (28) expression -> . expression NOT_EQ expression
    (29) expression -> . expression GREATER_EQ expression
    (30) expression -> . expression LESS_EQ expression
    (31) expression -> . expression PLUS expression
    (32) expression -> . expression MINUS expression
    (33) expression -> . expression MULTIPLY expression
    (34) expression -> . expression DIVIDE expression
    (35) expression -> . LPAREN expression RPAREN
    (36) expression -> . expression OR expression
    (37) expression -> . expression AND expression
    (38) expression -> . NUMBER
    (39) expression -> . lambda
    (40) expression -> . TRUE
    (41) expression -> . FALSE
    (42) expression -> . NIL
    (43) expression -> . AT
    (44) expression -> . STRING
    (45) expression -> . variable
    (46) expression -> . NAME LPAREN args RPAREN
    (47) expression -> . NAME LPAREN RPAREN
    (48) expression -> . NAME DOT NAME LPAREN args RPAREN
    (49) expression -> . NAME DOT NAME LPAREN RPAREN
    (6) lambda -> . LAMBDA LPAREN formal_args RPAREN LBRACE statements RBRACE
    (7) lambda -> . LAMBDA LPAREN RPAREN LBRACE statements RBRACE

    IF              shift and go to state 25
    WHILE           shift and go to state 26
    RETURN          shift and go to state 27
    NAME            shift and go to state 19
    NOT             shift and go to state 28
    MINUS           shift and go to state 29
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 30
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    NIL             shift and go to state 34
    AT              shift and go to state 35
    STRING          shift and go to state 36
    LAMBDA          shift and go to state 37

    expression                     shift and go to state 24
    statements                     shift and go to state 109
    statement                      shift and go to state 22
    variable                       shift and go to state 23
    lambda                         shift and go to state 31

state 105

    (19) statement -> WHILE LPAREN expression RPAREN LBRACE . statements RBRACE
    (12) statements -> . statements statement
    (13) statements -> . statement
    (14) statement -> . variable ASSIGN expression SEMI
    (17) statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE
    (18) statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (19) statement -> . WHILE LPAREN expression RPAREN LBRACE statements RBRACE
    (20) statement -> . expression SEMI
    (21) statement -> . RETURN expression SEMI
    (22) statement -> . RETURN SEMI
    (15) variable -> . NAME DOT NAME
    (16) variable -> . NAME
    (23) expression -> . NOT expression
    (24) expression -> . MINUS expression
    (25) expression -> . expression EQ expression
    (26) expression -> . expression GREATER expression
    (27) expression -> . expression LESS expression
    (28) expression -> . expression NOT_EQ expression
    (29) expression -> . expression GREATER_EQ expression
    (30) expression -> . expression LESS_EQ expression
    (31) expression -> . expression PLUS expression
    (32) expression -> . expression MINUS expression
    (33) expression -> . expression MULTIPLY expression
    (34) expression -> . expression DIVIDE expression
    (35) expression -> . LPAREN expression RPAREN
    (36) expression -> . expression OR expression
    (37) expression -> . expression AND expression
    (38) expression -> . NUMBER
    (39) expression -> . lambda
    (40) expression -> . TRUE
    (41) expression -> . FALSE
    (42) expression -> . NIL
    (43) expression -> . AT
    (44) expression -> . STRING
    (45) expression -> . variable
    (46) expression -> . NAME LPAREN args RPAREN
    (47) expression -> . NAME LPAREN RPAREN
    (48) expression -> . NAME DOT NAME LPAREN args RPAREN
    (49) expression -> . NAME DOT NAME LPAREN RPAREN
    (6) lambda -> . LAMBDA LPAREN formal_args RPAREN LBRACE statements RBRACE
    (7) lambda -> . LAMBDA LPAREN RPAREN LBRACE statements RBRACE

    IF              shift and go to state 25
    WHILE           shift and go to state 26
    RETURN          shift and go to state 27
    NAME            shift and go to state 19
    NOT             shift and go to state 28
    MINUS           shift and go to state 29
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 30
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    NIL             shift and go to state 34
    AT              shift and go to state 35
    STRING          shift and go to state 36
    LAMBDA          shift and go to state 37

    expression                     shift and go to state 24
    statements                     shift and go to state 110
    statement                      shift and go to state 22
    variable                       shift and go to state 23
    lambda                         shift and go to state 31

state 106

    (6) lambda -> LAMBDA LPAREN formal_args RPAREN LBRACE . statements RBRACE
    (12) statements -> . statements statement
    (13) statements -> . statement
    (14) statement -> . variable ASSIGN expression SEMI
    (17) statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE
    (18) statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (19) statement -> . WHILE LPAREN expression RPAREN LBRACE statements RBRACE
    (20) statement -> . expression SEMI
    (21) statement -> . RETURN expression SEMI
    (22) statement -> . RETURN SEMI
    (15) variable -> . NAME DOT NAME
    (16) variable -> . NAME
    (23) expression -> . NOT expression
    (24) expression -> . MINUS expression
    (25) expression -> . expression EQ expression
    (26) expression -> . expression GREATER expression
    (27) expression -> . expression LESS expression
    (28) expression -> . expression NOT_EQ expression
    (29) expression -> . expression GREATER_EQ expression
    (30) expression -> . expression LESS_EQ expression
    (31) expression -> . expression PLUS expression
    (32) expression -> . expression MINUS expression
    (33) expression -> . expression MULTIPLY expression
    (34) expression -> . expression DIVIDE expression
    (35) expression -> . LPAREN expression RPAREN
    (36) expression -> . expression OR expression
    (37) expression -> . expression AND expression
    (38) expression -> . NUMBER
    (39) expression -> . lambda
    (40) expression -> . TRUE
    (41) expression -> . FALSE
    (42) expression -> . NIL
    (43) expression -> . AT
    (44) expression -> . STRING
    (45) expression -> . variable
    (46) expression -> . NAME LPAREN args RPAREN
    (47) expression -> . NAME LPAREN RPAREN
    (48) expression -> . NAME DOT NAME LPAREN args RPAREN
    (49) expression -> . NAME DOT NAME LPAREN RPAREN
    (6) lambda -> . LAMBDA LPAREN formal_args RPAREN LBRACE statements RBRACE
    (7) lambda -> . LAMBDA LPAREN RPAREN LBRACE statements RBRACE

    IF              shift and go to state 25
    WHILE           shift and go to state 26
    RETURN          shift and go to state 27
    NAME            shift and go to state 19
    NOT             shift and go to state 28
    MINUS           shift and go to state 29
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 30
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    NIL             shift and go to state 34
    AT              shift and go to state 35
    STRING          shift and go to state 36
    LAMBDA          shift and go to state 37

    statements                     shift and go to state 111
    statement                      shift and go to state 22
    variable                       shift and go to state 23
    expression                     shift and go to state 24
    lambda                         shift and go to state 31

state 107

    (7) lambda -> LAMBDA LPAREN RPAREN LBRACE statements . RBRACE
    (12) statements -> statements . statement
    (14) statement -> . variable ASSIGN expression SEMI
    (17) statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE
    (18) statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (19) statement -> . WHILE LPAREN expression RPAREN LBRACE statements RBRACE
    (20) statement -> . expression SEMI
    (21) statement -> . RETURN expression SEMI
    (22) statement -> . RETURN SEMI
    (15) variable -> . NAME DOT NAME
    (16) variable -> . NAME
    (23) expression -> . NOT expression
    (24) expression -> . MINUS expression
    (25) expression -> . expression EQ expression
    (26) expression -> . expression GREATER expression
    (27) expression -> . expression LESS expression
    (28) expression -> . expression NOT_EQ expression
    (29) expression -> . expression GREATER_EQ expression
    (30) expression -> . expression LESS_EQ expression
    (31) expression -> . expression PLUS expression
    (32) expression -> . expression MINUS expression
    (33) expression -> . expression MULTIPLY expression
    (34) expression -> . expression DIVIDE expression
    (35) expression -> . LPAREN expression RPAREN
    (36) expression -> . expression OR expression
    (37) expression -> . expression AND expression
    (38) expression -> . NUMBER
    (39) expression -> . lambda
    (40) expression -> . TRUE
    (41) expression -> . FALSE
    (42) expression -> . NIL
    (43) expression -> . AT
    (44) expression -> . STRING
    (45) expression -> . variable
    (46) expression -> . NAME LPAREN args RPAREN
    (47) expression -> . NAME LPAREN RPAREN
    (48) expression -> . NAME DOT NAME LPAREN args RPAREN
    (49) expression -> . NAME DOT NAME LPAREN RPAREN
    (6) lambda -> . LAMBDA LPAREN formal_args RPAREN LBRACE statements RBRACE
    (7) lambda -> . LAMBDA LPAREN RPAREN LBRACE statements RBRACE

    RBRACE          shift and go to state 112
    IF              shift and go to state 25
    WHILE           shift and go to state 26
    RETURN          shift and go to state 27
    NAME            shift and go to state 19
    NOT             shift and go to state 28
    MINUS           shift and go to state 29
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 30
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    NIL             shift and go to state 34
    AT              shift and go to state 35
    STRING          shift and go to state 36
    LAMBDA          shift and go to state 37

    statement                      shift and go to state 45
    variable                       shift and go to state 23
    expression                     shift and go to state 24
    lambda                         shift and go to state 31

state 108

    (48) expression -> NAME DOT NAME LPAREN args RPAREN .

    SEMI            reduce using rule 48 (expression -> NAME DOT NAME LPAREN args RPAREN .)
    EQ              reduce using rule 48 (expression -> NAME DOT NAME LPAREN args RPAREN .)
    GREATER         reduce using rule 48 (expression -> NAME DOT NAME LPAREN args RPAREN .)
    LESS            reduce using rule 48 (expression -> NAME DOT NAME LPAREN args RPAREN .)
    NOT_EQ          reduce using rule 48 (expression -> NAME DOT NAME LPAREN args RPAREN .)
    GREATER_EQ      reduce using rule 48 (expression -> NAME DOT NAME LPAREN args RPAREN .)
    LESS_EQ         reduce using rule 48 (expression -> NAME DOT NAME LPAREN args RPAREN .)
    PLUS            reduce using rule 48 (expression -> NAME DOT NAME LPAREN args RPAREN .)
    MINUS           reduce using rule 48 (expression -> NAME DOT NAME LPAREN args RPAREN .)
    MULTIPLY        reduce using rule 48 (expression -> NAME DOT NAME LPAREN args RPAREN .)
    DIVIDE          reduce using rule 48 (expression -> NAME DOT NAME LPAREN args RPAREN .)
    OR              reduce using rule 48 (expression -> NAME DOT NAME LPAREN args RPAREN .)
    AND             reduce using rule 48 (expression -> NAME DOT NAME LPAREN args RPAREN .)
    RPAREN          reduce using rule 48 (expression -> NAME DOT NAME LPAREN args RPAREN .)
    COMMA           reduce using rule 48 (expression -> NAME DOT NAME LPAREN args RPAREN .)


state 109

    (17) statement -> IF LPAREN expression RPAREN LBRACE statements . RBRACE
    (18) statement -> IF LPAREN expression RPAREN LBRACE statements . RBRACE ELSE LBRACE statements RBRACE
    (12) statements -> statements . statement
    (14) statement -> . variable ASSIGN expression SEMI
    (17) statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE
    (18) statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (19) statement -> . WHILE LPAREN expression RPAREN LBRACE statements RBRACE
    (20) statement -> . expression SEMI
    (21) statement -> . RETURN expression SEMI
    (22) statement -> . RETURN SEMI
    (15) variable -> . NAME DOT NAME
    (16) variable -> . NAME
    (23) expression -> . NOT expression
    (24) expression -> . MINUS expression
    (25) expression -> . expression EQ expression
    (26) expression -> . expression GREATER expression
    (27) expression -> . expression LESS expression
    (28) expression -> . expression NOT_EQ expression
    (29) expression -> . expression GREATER_EQ expression
    (30) expression -> . expression LESS_EQ expression
    (31) expression -> . expression PLUS expression
    (32) expression -> . expression MINUS expression
    (33) expression -> . expression MULTIPLY expression
    (34) expression -> . expression DIVIDE expression
    (35) expression -> . LPAREN expression RPAREN
    (36) expression -> . expression OR expression
    (37) expression -> . expression AND expression
    (38) expression -> . NUMBER
    (39) expression -> . lambda
    (40) expression -> . TRUE
    (41) expression -> . FALSE
    (42) expression -> . NIL
    (43) expression -> . AT
    (44) expression -> . STRING
    (45) expression -> . variable
    (46) expression -> . NAME LPAREN args RPAREN
    (47) expression -> . NAME LPAREN RPAREN
    (48) expression -> . NAME DOT NAME LPAREN args RPAREN
    (49) expression -> . NAME DOT NAME LPAREN RPAREN
    (6) lambda -> . LAMBDA LPAREN formal_args RPAREN LBRACE statements RBRACE
    (7) lambda -> . LAMBDA LPAREN RPAREN LBRACE statements RBRACE

    RBRACE          shift and go to state 113
    IF              shift and go to state 25
    WHILE           shift and go to state 26
    RETURN          shift and go to state 27
    NAME            shift and go to state 19
    NOT             shift and go to state 28
    MINUS           shift and go to state 29
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 30
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    NIL             shift and go to state 34
    AT              shift and go to state 35
    STRING          shift and go to state 36
    LAMBDA          shift and go to state 37

    expression                     shift and go to state 24
    statement                      shift and go to state 45
    variable                       shift and go to state 23
    lambda                         shift and go to state 31

state 110

    (19) statement -> WHILE LPAREN expression RPAREN LBRACE statements . RBRACE
    (12) statements -> statements . statement
    (14) statement -> . variable ASSIGN expression SEMI
    (17) statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE
    (18) statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (19) statement -> . WHILE LPAREN expression RPAREN LBRACE statements RBRACE
    (20) statement -> . expression SEMI
    (21) statement -> . RETURN expression SEMI
    (22) statement -> . RETURN SEMI
    (15) variable -> . NAME DOT NAME
    (16) variable -> . NAME
    (23) expression -> . NOT expression
    (24) expression -> . MINUS expression
    (25) expression -> . expression EQ expression
    (26) expression -> . expression GREATER expression
    (27) expression -> . expression LESS expression
    (28) expression -> . expression NOT_EQ expression
    (29) expression -> . expression GREATER_EQ expression
    (30) expression -> . expression LESS_EQ expression
    (31) expression -> . expression PLUS expression
    (32) expression -> . expression MINUS expression
    (33) expression -> . expression MULTIPLY expression
    (34) expression -> . expression DIVIDE expression
    (35) expression -> . LPAREN expression RPAREN
    (36) expression -> . expression OR expression
    (37) expression -> . expression AND expression
    (38) expression -> . NUMBER
    (39) expression -> . lambda
    (40) expression -> . TRUE
    (41) expression -> . FALSE
    (42) expression -> . NIL
    (43) expression -> . AT
    (44) expression -> . STRING
    (45) expression -> . variable
    (46) expression -> . NAME LPAREN args RPAREN
    (47) expression -> . NAME LPAREN RPAREN
    (48) expression -> . NAME DOT NAME LPAREN args RPAREN
    (49) expression -> . NAME DOT NAME LPAREN RPAREN
    (6) lambda -> . LAMBDA LPAREN formal_args RPAREN LBRACE statements RBRACE
    (7) lambda -> . LAMBDA LPAREN RPAREN LBRACE statements RBRACE

    RBRACE          shift and go to state 114
    IF              shift and go to state 25
    WHILE           shift and go to state 26
    RETURN          shift and go to state 27
    NAME            shift and go to state 19
    NOT             shift and go to state 28
    MINUS           shift and go to state 29
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 30
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    NIL             shift and go to state 34
    AT              shift and go to state 35
    STRING          shift and go to state 36
    LAMBDA          shift and go to state 37

    expression                     shift and go to state 24
    statement                      shift and go to state 45
    variable                       shift and go to state 23
    lambda                         shift and go to state 31

state 111

    (6) lambda -> LAMBDA LPAREN formal_args RPAREN LBRACE statements . RBRACE
    (12) statements -> statements . statement
    (14) statement -> . variable ASSIGN expression SEMI
    (17) statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE
    (18) statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (19) statement -> . WHILE LPAREN expression RPAREN LBRACE statements RBRACE
    (20) statement -> . expression SEMI
    (21) statement -> . RETURN expression SEMI
    (22) statement -> . RETURN SEMI
    (15) variable -> . NAME DOT NAME
    (16) variable -> . NAME
    (23) expression -> . NOT expression
    (24) expression -> . MINUS expression
    (25) expression -> . expression EQ expression
    (26) expression -> . expression GREATER expression
    (27) expression -> . expression LESS expression
    (28) expression -> . expression NOT_EQ expression
    (29) expression -> . expression GREATER_EQ expression
    (30) expression -> . expression LESS_EQ expression
    (31) expression -> . expression PLUS expression
    (32) expression -> . expression MINUS expression
    (33) expression -> . expression MULTIPLY expression
    (34) expression -> . expression DIVIDE expression
    (35) expression -> . LPAREN expression RPAREN
    (36) expression -> . expression OR expression
    (37) expression -> . expression AND expression
    (38) expression -> . NUMBER
    (39) expression -> . lambda
    (40) expression -> . TRUE
    (41) expression -> . FALSE
    (42) expression -> . NIL
    (43) expression -> . AT
    (44) expression -> . STRING
    (45) expression -> . variable
    (46) expression -> . NAME LPAREN args RPAREN
    (47) expression -> . NAME LPAREN RPAREN
    (48) expression -> . NAME DOT NAME LPAREN args RPAREN
    (49) expression -> . NAME DOT NAME LPAREN RPAREN
    (6) lambda -> . LAMBDA LPAREN formal_args RPAREN LBRACE statements RBRACE
    (7) lambda -> . LAMBDA LPAREN RPAREN LBRACE statements RBRACE

    RBRACE          shift and go to state 115
    IF              shift and go to state 25
    WHILE           shift and go to state 26
    RETURN          shift and go to state 27
    NAME            shift and go to state 19
    NOT             shift and go to state 28
    MINUS           shift and go to state 29
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 30
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    NIL             shift and go to state 34
    AT              shift and go to state 35
    STRING          shift and go to state 36
    LAMBDA          shift and go to state 37

    statement                      shift and go to state 45
    variable                       shift and go to state 23
    expression                     shift and go to state 24
    lambda                         shift and go to state 31

state 112

    (7) lambda -> LAMBDA LPAREN RPAREN LBRACE statements RBRACE .

    SEMI            reduce using rule 7 (lambda -> LAMBDA LPAREN RPAREN LBRACE statements RBRACE .)
    EQ              reduce using rule 7 (lambda -> LAMBDA LPAREN RPAREN LBRACE statements RBRACE .)
    GREATER         reduce using rule 7 (lambda -> LAMBDA LPAREN RPAREN LBRACE statements RBRACE .)
    LESS            reduce using rule 7 (lambda -> LAMBDA LPAREN RPAREN LBRACE statements RBRACE .)
    NOT_EQ          reduce using rule 7 (lambda -> LAMBDA LPAREN RPAREN LBRACE statements RBRACE .)
    GREATER_EQ      reduce using rule 7 (lambda -> LAMBDA LPAREN RPAREN LBRACE statements RBRACE .)
    LESS_EQ         reduce using rule 7 (lambda -> LAMBDA LPAREN RPAREN LBRACE statements RBRACE .)
    PLUS            reduce using rule 7 (lambda -> LAMBDA LPAREN RPAREN LBRACE statements RBRACE .)
    MINUS           reduce using rule 7 (lambda -> LAMBDA LPAREN RPAREN LBRACE statements RBRACE .)
    MULTIPLY        reduce using rule 7 (lambda -> LAMBDA LPAREN RPAREN LBRACE statements RBRACE .)
    DIVIDE          reduce using rule 7 (lambda -> LAMBDA LPAREN RPAREN LBRACE statements RBRACE .)
    OR              reduce using rule 7 (lambda -> LAMBDA LPAREN RPAREN LBRACE statements RBRACE .)
    AND             reduce using rule 7 (lambda -> LAMBDA LPAREN RPAREN LBRACE statements RBRACE .)
    RPAREN          reduce using rule 7 (lambda -> LAMBDA LPAREN RPAREN LBRACE statements RBRACE .)
    COMMA           reduce using rule 7 (lambda -> LAMBDA LPAREN RPAREN LBRACE statements RBRACE .)


state 113

    (17) statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE .
    (18) statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE . ELSE LBRACE statements RBRACE

    RBRACE          reduce using rule 17 (statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE .)
    IF              reduce using rule 17 (statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE .)
    WHILE           reduce using rule 17 (statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE .)
    RETURN          reduce using rule 17 (statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE .)
    NAME            reduce using rule 17 (statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE .)
    NOT             reduce using rule 17 (statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE .)
    MINUS           reduce using rule 17 (statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE .)
    LPAREN          reduce using rule 17 (statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE .)
    NUMBER          reduce using rule 17 (statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE .)
    TRUE            reduce using rule 17 (statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE .)
    FALSE           reduce using rule 17 (statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE .)
    NIL             reduce using rule 17 (statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE .)
    AT              reduce using rule 17 (statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE .)
    STRING          reduce using rule 17 (statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE .)
    LAMBDA          reduce using rule 17 (statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE .)
    ELSE            shift and go to state 116


state 114

    (19) statement -> WHILE LPAREN expression RPAREN LBRACE statements RBRACE .

    RBRACE          reduce using rule 19 (statement -> WHILE LPAREN expression RPAREN LBRACE statements RBRACE .)
    IF              reduce using rule 19 (statement -> WHILE LPAREN expression RPAREN LBRACE statements RBRACE .)
    WHILE           reduce using rule 19 (statement -> WHILE LPAREN expression RPAREN LBRACE statements RBRACE .)
    RETURN          reduce using rule 19 (statement -> WHILE LPAREN expression RPAREN LBRACE statements RBRACE .)
    NAME            reduce using rule 19 (statement -> WHILE LPAREN expression RPAREN LBRACE statements RBRACE .)
    NOT             reduce using rule 19 (statement -> WHILE LPAREN expression RPAREN LBRACE statements RBRACE .)
    MINUS           reduce using rule 19 (statement -> WHILE LPAREN expression RPAREN LBRACE statements RBRACE .)
    LPAREN          reduce using rule 19 (statement -> WHILE LPAREN expression RPAREN LBRACE statements RBRACE .)
    NUMBER          reduce using rule 19 (statement -> WHILE LPAREN expression RPAREN LBRACE statements RBRACE .)
    TRUE            reduce using rule 19 (statement -> WHILE LPAREN expression RPAREN LBRACE statements RBRACE .)
    FALSE           reduce using rule 19 (statement -> WHILE LPAREN expression RPAREN LBRACE statements RBRACE .)
    NIL             reduce using rule 19 (statement -> WHILE LPAREN expression RPAREN LBRACE statements RBRACE .)
    AT              reduce using rule 19 (statement -> WHILE LPAREN expression RPAREN LBRACE statements RBRACE .)
    STRING          reduce using rule 19 (statement -> WHILE LPAREN expression RPAREN LBRACE statements RBRACE .)
    LAMBDA          reduce using rule 19 (statement -> WHILE LPAREN expression RPAREN LBRACE statements RBRACE .)


state 115

    (6) lambda -> LAMBDA LPAREN formal_args RPAREN LBRACE statements RBRACE .

    SEMI            reduce using rule 6 (lambda -> LAMBDA LPAREN formal_args RPAREN LBRACE statements RBRACE .)
    EQ              reduce using rule 6 (lambda -> LAMBDA LPAREN formal_args RPAREN LBRACE statements RBRACE .)
    GREATER         reduce using rule 6 (lambda -> LAMBDA LPAREN formal_args RPAREN LBRACE statements RBRACE .)
    LESS            reduce using rule 6 (lambda -> LAMBDA LPAREN formal_args RPAREN LBRACE statements RBRACE .)
    NOT_EQ          reduce using rule 6 (lambda -> LAMBDA LPAREN formal_args RPAREN LBRACE statements RBRACE .)
    GREATER_EQ      reduce using rule 6 (lambda -> LAMBDA LPAREN formal_args RPAREN LBRACE statements RBRACE .)
    LESS_EQ         reduce using rule 6 (lambda -> LAMBDA LPAREN formal_args RPAREN LBRACE statements RBRACE .)
    PLUS            reduce using rule 6 (lambda -> LAMBDA LPAREN formal_args RPAREN LBRACE statements RBRACE .)
    MINUS           reduce using rule 6 (lambda -> LAMBDA LPAREN formal_args RPAREN LBRACE statements RBRACE .)
    MULTIPLY        reduce using rule 6 (lambda -> LAMBDA LPAREN formal_args RPAREN LBRACE statements RBRACE .)
    DIVIDE          reduce using rule 6 (lambda -> LAMBDA LPAREN formal_args RPAREN LBRACE statements RBRACE .)
    OR              reduce using rule 6 (lambda -> LAMBDA LPAREN formal_args RPAREN LBRACE statements RBRACE .)
    AND             reduce using rule 6 (lambda -> LAMBDA LPAREN formal_args RPAREN LBRACE statements RBRACE .)
    RPAREN          reduce using rule 6 (lambda -> LAMBDA LPAREN formal_args RPAREN LBRACE statements RBRACE .)
    COMMA           reduce using rule 6 (lambda -> LAMBDA LPAREN formal_args RPAREN LBRACE statements RBRACE .)


state 116

    (18) statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE . LBRACE statements RBRACE

    LBRACE          shift and go to state 117


state 117

    (18) statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE . statements RBRACE
    (12) statements -> . statements statement
    (13) statements -> . statement
    (14) statement -> . variable ASSIGN expression SEMI
    (17) statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE
    (18) statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (19) statement -> . WHILE LPAREN expression RPAREN LBRACE statements RBRACE
    (20) statement -> . expression SEMI
    (21) statement -> . RETURN expression SEMI
    (22) statement -> . RETURN SEMI
    (15) variable -> . NAME DOT NAME
    (16) variable -> . NAME
    (23) expression -> . NOT expression
    (24) expression -> . MINUS expression
    (25) expression -> . expression EQ expression
    (26) expression -> . expression GREATER expression
    (27) expression -> . expression LESS expression
    (28) expression -> . expression NOT_EQ expression
    (29) expression -> . expression GREATER_EQ expression
    (30) expression -> . expression LESS_EQ expression
    (31) expression -> . expression PLUS expression
    (32) expression -> . expression MINUS expression
    (33) expression -> . expression MULTIPLY expression
    (34) expression -> . expression DIVIDE expression
    (35) expression -> . LPAREN expression RPAREN
    (36) expression -> . expression OR expression
    (37) expression -> . expression AND expression
    (38) expression -> . NUMBER
    (39) expression -> . lambda
    (40) expression -> . TRUE
    (41) expression -> . FALSE
    (42) expression -> . NIL
    (43) expression -> . AT
    (44) expression -> . STRING
    (45) expression -> . variable
    (46) expression -> . NAME LPAREN args RPAREN
    (47) expression -> . NAME LPAREN RPAREN
    (48) expression -> . NAME DOT NAME LPAREN args RPAREN
    (49) expression -> . NAME DOT NAME LPAREN RPAREN
    (6) lambda -> . LAMBDA LPAREN formal_args RPAREN LBRACE statements RBRACE
    (7) lambda -> . LAMBDA LPAREN RPAREN LBRACE statements RBRACE

    IF              shift and go to state 25
    WHILE           shift and go to state 26
    RETURN          shift and go to state 27
    NAME            shift and go to state 19
    NOT             shift and go to state 28
    MINUS           shift and go to state 29
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 30
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    NIL             shift and go to state 34
    AT              shift and go to state 35
    STRING          shift and go to state 36
    LAMBDA          shift and go to state 37

    expression                     shift and go to state 24
    statements                     shift and go to state 118
    statement                      shift and go to state 22
    variable                       shift and go to state 23
    lambda                         shift and go to state 31

state 118

    (18) statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements . RBRACE
    (12) statements -> statements . statement
    (14) statement -> . variable ASSIGN expression SEMI
    (17) statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE
    (18) statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (19) statement -> . WHILE LPAREN expression RPAREN LBRACE statements RBRACE
    (20) statement -> . expression SEMI
    (21) statement -> . RETURN expression SEMI
    (22) statement -> . RETURN SEMI
    (15) variable -> . NAME DOT NAME
    (16) variable -> . NAME
    (23) expression -> . NOT expression
    (24) expression -> . MINUS expression
    (25) expression -> . expression EQ expression
    (26) expression -> . expression GREATER expression
    (27) expression -> . expression LESS expression
    (28) expression -> . expression NOT_EQ expression
    (29) expression -> . expression GREATER_EQ expression
    (30) expression -> . expression LESS_EQ expression
    (31) expression -> . expression PLUS expression
    (32) expression -> . expression MINUS expression
    (33) expression -> . expression MULTIPLY expression
    (34) expression -> . expression DIVIDE expression
    (35) expression -> . LPAREN expression RPAREN
    (36) expression -> . expression OR expression
    (37) expression -> . expression AND expression
    (38) expression -> . NUMBER
    (39) expression -> . lambda
    (40) expression -> . TRUE
    (41) expression -> . FALSE
    (42) expression -> . NIL
    (43) expression -> . AT
    (44) expression -> . STRING
    (45) expression -> . variable
    (46) expression -> . NAME LPAREN args RPAREN
    (47) expression -> . NAME LPAREN RPAREN
    (48) expression -> . NAME DOT NAME LPAREN args RPAREN
    (49) expression -> . NAME DOT NAME LPAREN RPAREN
    (6) lambda -> . LAMBDA LPAREN formal_args RPAREN LBRACE statements RBRACE
    (7) lambda -> . LAMBDA LPAREN RPAREN LBRACE statements RBRACE

    RBRACE          shift and go to state 119
    IF              shift and go to state 25
    WHILE           shift and go to state 26
    RETURN          shift and go to state 27
    NAME            shift and go to state 19
    NOT             shift and go to state 28
    MINUS           shift and go to state 29
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 30
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    NIL             shift and go to state 34
    AT              shift and go to state 35
    STRING          shift and go to state 36
    LAMBDA          shift and go to state 37

    expression                     shift and go to state 24
    statement                      shift and go to state 45
    variable                       shift and go to state 23
    lambda                         shift and go to state 31

state 119

    (18) statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .

    RBRACE          reduce using rule 18 (statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    IF              reduce using rule 18 (statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    WHILE           reduce using rule 18 (statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    RETURN          reduce using rule 18 (statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    NAME            reduce using rule 18 (statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    NOT             reduce using rule 18 (statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    MINUS           reduce using rule 18 (statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    LPAREN          reduce using rule 18 (statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    NUMBER          reduce using rule 18 (statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    TRUE            reduce using rule 18 (statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    FALSE           reduce using rule 18 (statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    NIL             reduce using rule 18 (statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    AT              reduce using rule 18 (statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    STRING          reduce using rule 18 (statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    LAMBDA          reduce using rule 18 (statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)

